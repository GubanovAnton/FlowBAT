{"version":3,"sources":["meteor://ðŸ’»app/server/fixtures.coffee"],"names":["insertData","indexOf","share","fixtureIds","data","collection","_id","object","call","push","find","count","isNew","insert","loadFixtures","Meteor","settings","isLoadingFixtures","loadFixturesForCompleteSetup","loadFixturesForIncompleteSetup","configs","executingInterval","ipsets","lastWeek","now","queries","query","user","users","usersInserted","Date","getTime","Default","isSetupComplete","isSSH","host","port","identityFile","siteConfigFile","dataRootdir","dataTempdir","Configs","ChrisSanders","profile","name","group","DenisGorbachev","_","defaults","emails","address","toLowerCase","verified","services","resume","loginTokens","Accounts","_hashLoginToken","createdAt","setPassword","Dashboard1","cmd","exclusionsCmd","sportEnabled","sport","ownerId","RwstatsTest","interface","output","rwstatsFields","rwstatsValues","RwcountTest","rwcountBinSizeEnabled","rwcountBinSize","rwcountLoadSchemeEnabled","rwcountLoadScheme","extend","startDateEnabled","startDate","Queries","findOne","update","$set","isOutputStale","minute","Local","note","contents","DNS","IPSets"],"mappings":"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","file":"/server/fixtures.coffee","sourcesContent":["share.fixtureIds = []\n\ninsertData = (data, collection) ->\n  for _id of data when _id not in share.fixtureIds\n    share.fixtureIds.push(_id)\n  if collection.find().count() is 0\n    for _id, object of data\n      object._id = _id\n      object.isNew = false\n      collection.insert(object)\n    return true\n\nshare.loadFixtures = ->\n  if Meteor.settings.isLoadingFixtures\n    share.loadFixturesForCompleteSetup()\n  else\n    share.loadFixturesForIncompleteSetup()\n\nshare.loadFixturesForCompleteSetup = ->\n  now = new Date()\n  lastWeek = new Date(now.getTime() - 7 * 24 * 3600 * 1000)\n\n  configs =\n    Default:\n      isSetupComplete: true\n      isSSH: true\n      host: \"50.116.29.253\"\n      port: \"22\"\n      user: \"denis\"\n      identityFile: \"\"\n      siteConfigFile: \"/usr/local/etc/silk.conf\"\n      dataRootdir: \"/data\"\n      dataTempdir: \"/tmp\"\n  insertData(configs, share.Configs)\n\n  users =\n    ChrisSanders:\n      profile:\n        name: \"Chris Sanders\"\n#        timezone: 240 # US, Charleston\n      group: \"admin\"\n    DenisGorbachev:\n      profile:\n        name: \"Denis Gorbachev\"\n#        timezone: -240 # Russia, Moscow\n      group: \"admin\"\n  for _id, user of users\n    _.defaults(user,\n      emails: [\n        {\n          address: _id.toLowerCase() + \"@flowbat.com\"\n          verified: true\n        }\n      ]\n      services:\n        resume:\n          loginTokens: [\n            {\n              \"hashedToken\": Accounts._hashLoginToken(_id),\n              \"when\": now\n            }\n          ]\n      createdAt: lastWeek\n    )\n  usersInserted = insertData(users, Meteor.users)\n  if usersInserted\n    for _id, user of users\n      Accounts.setPassword(_id, \"123123\")\n\n  queries =\n    Dashboard1:\n      name: \"Dashboard query\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      exclusionsCmd: \"--daddress=192.168.0.1 OR --scc=au\"\n      sportEnabled: true\n      sport: \"80\"\n      ownerId: \"ChrisSanders\"\n    RwstatsTest:\n      name: \"Rwstats query\"\n      interface: \"builder\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      sportEnabled: true\n      sport: \"80\"\n      output: \"rwstats\"\n      rwstatsFields: [\"sIP\"]\n      rwstatsValues: [\"Records\", \"dIP\", \"dPort\"]\n      ownerId: \"ChrisSanders\"\n    RwcountTest:\n      name: \"Rwcount query\"\n      interface: \"builder\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      sportEnabled: true\n      sport: \"80\"\n      output: \"rwcount\"\n      rwcountBinSizeEnabled: true\n      rwcountBinSize: \"10\"\n      rwcountLoadSchemeEnabled: true\n      rwcountLoadScheme: \"0\"\n      ownerId: \"ChrisSanders\"\n  for _id, query of queries\n    _.extend(query,\n      startDateEnabled: false\n      startDate: \"\"\n    )\n  for _id of queries when _id not in share.fixtureIds\n    share.fixtureIds.push(_id)\n  if share.Queries.find().count() is 0\n    for _id, query of queries\n      query._id = _id\n      query.isNew = false\n      _id = share.Queries.insert(query)\n      query = share.Queries.findOne(_id)\n      share.Queries.update(_id, {$set: {isOutputStale: true}})\n    executingInterval = 5 * share.minute\n#    executingInterval /= 5 * 12 # debug\n    share.Queries.update(\"Dashboard1\", {$set: {executingInterval: executingInterval}})\n    Meteor.users.update(\"ChrisSanders\", {$set: {\"profile.dashboardQueryIds\": [\"Dashboard1\"]}})\n\n  ipsets =\n    Local:\n      name: \"Local addresses\"\n      note: \"John asked to create this\"\n      contents: \"\"\"\n        192.168.0.1\n        192.168.0.2\n        192.168.0.3\n      \"\"\"\n      ownerId: \"ChrisSanders\"\n    DNS:\n      name: \"DNS addresses\"\n      note: \"For testing purposes\"\n      contents: \"\"\"\n        8.8.8.8\n        8.8.4.4\n        208.67.222.222\n        208.67.220.220\n      \"\"\"\n      ownerId: \"ChrisSanders\"\n  insertData(ipsets, share.IPSets)\n\n\n#  serviceConfigurations = {}\n#  insertData(serviceConfigurations, ServiceConfiguration.configurations)\n\nshare.loadFixturesForIncompleteSetup = ->\n  configs =\n    Default:\n      isSetupComplete: false\n  insertData(configs, share.Configs)\n"]}