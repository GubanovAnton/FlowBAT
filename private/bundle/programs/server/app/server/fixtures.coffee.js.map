{"version":3,"sources":["fixtures.coffee"],"names":[],"mappings":"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","file":"/server/fixtures.coffee.js","sourcesContent":["share.fixtureIds = []\n\ninsertData = (data, collection) ->\n  for _id of data when _id not in share.fixtureIds\n    share.fixtureIds.push(_id)\n  if collection.find().count() is 0\n    for _id, object of data\n      object._id = _id\n      object.isNew = false\n      collection.insert(object)\n    return true\n\nshare.loadFixtures = ->\n  if Meteor.settings.isLoadingFixtures\n    share.loadFixturesForCompleteSetup()\n  else\n    share.loadFixturesForIncompleteSetup()\n\nshare.loadFixturesForCompleteSetup = ->\n  now = new Date()\n  lastWeek = new Date(now.getTime() - 7 * 24 * 3600 * 1000)\n\n  configs =\n    Default:\n      isSetupComplete: true\n      isSSH: true\n      host: \"50.116.29.253\"\n      port: \"22\"\n      user: \"denis\"\n      identityFile: \"\"\n      siteConfigFile: \"/usr/local/etc/silk.conf\"\n      dataRootdir: \"/data\"\n      dataTempdir: \"/tmp\"\n  insertData(configs, share.Configs)\n\n  users =\n    ChrisSanders:\n      profile:\n        name: \"Chris Sanders\"\n#        timezone: 240 # US, Charleston\n      group: \"admin\"\n    DenisGorbachev:\n      profile:\n        name: \"Denis Gorbachev\"\n#        timezone: -240 # Russia, Moscow\n      group: \"admin\"\n  for _id, user of users\n    _.defaults(user,\n      emails: [\n        {\n          address: _id.toLowerCase() + \"@flowbat.com\"\n          verified: true\n        }\n      ]\n      services:\n        resume:\n          loginTokens: [\n            {\n              \"hashedToken\": Accounts._hashLoginToken(_id),\n              \"when\": now\n            }\n          ]\n      createdAt: lastWeek\n    )\n  usersInserted = insertData(users, Meteor.users)\n  if usersInserted\n    for _id, user of users\n      Accounts.setPassword(_id, \"123123\")\n\n  queries =\n    Dashboard1:\n      name: \"Dashboard query\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      exclusionsCmd: \"--daddress=192.168.0.1 OR --scc=au\"\n      sportEnabled: true\n      sport: \"80\"\n      ownerId: \"ChrisSanders\"\n    RwstatsTest:\n      name: \"Rwstats query\"\n      interface: \"builder\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      sportEnabled: true\n      sport: \"80\"\n      output: \"rwstats\"\n      rwstatsFields: [\"sIP\"]\n      rwstatsValues: [\"Records\", \"dIP\", \"dPort\"]\n      ownerId: \"ChrisSanders\"\n    RwcountTest:\n      name: \"Rwcount query\"\n      interface: \"builder\"\n      cmd: \"--sensor=S0 --type=all --sport=80\"\n      sportEnabled: true\n      sport: \"80\"\n      output: \"rwcount\"\n      rwcountBinSizeEnabled: true\n      rwcountBinSize: \"10\"\n      rwcountLoadSchemeEnabled: true\n      rwcountLoadScheme: \"0\"\n      ownerId: \"ChrisSanders\"\n  for _id, query of queries\n    _.extend(query,\n      startDateEnabled: false\n      startDate: \"\"\n    )\n  for _id of queries when _id not in share.fixtureIds\n    share.fixtureIds.push(_id)\n  if share.Queries.find().count() is 0\n    for _id, query of queries\n      query._id = _id\n      query.isNew = false\n      _id = share.Queries.insert(query)\n      query = share.Queries.findOne(_id)\n      share.Queries.update(_id, {$set: {isOutputStale: true}})\n    executingInterval = 5 * share.minute\n#    executingInterval /= 5 * 12 # debug\n    share.Queries.update(\"Dashboard1\", {$set: {executingInterval: executingInterval}})\n    Meteor.users.update(\"ChrisSanders\", {$set: {\"profile.dashboardQueryIds\": [\"Dashboard1\"]}})\n\n  ipsets =\n    Local:\n      name: \"Local addresses\"\n      note: \"John asked to create this\"\n      contents: \"\"\"\n        192.168.0.1\n        192.168.0.2\n        192.168.0.3\n      \"\"\"\n      ownerId: \"ChrisSanders\"\n    DNS:\n      name: \"DNS addresses\"\n      note: \"For testing purposes\"\n      contents: \"\"\"\n        8.8.8.8\n        8.8.4.4\n        208.67.222.222\n        208.67.220.220\n      \"\"\"\n      ownerId: \"ChrisSanders\"\n  insertData(ipsets, share.IPSets)\n\n\n#  serviceConfigurations = {}\n#  insertData(serviceConfigurations, ServiceConfiguration.configurations)\n\nshare.loadFixturesForIncompleteSetup = ->\n  configs =\n    Default:\n      isSetupComplete: false\n  insertData(configs, share.Configs)\n"]}