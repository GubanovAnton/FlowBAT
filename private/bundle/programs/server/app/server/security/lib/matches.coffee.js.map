{"version":3,"sources":["matches.coffee"],"names":[],"mappings":"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","file":"/server/security/lib/matches.coffee.js","sourcesContent":["Match.App =\n  Id: Match.Where (value) ->\n    check(value, String)\n    if value in share.fixtureIds\n      return true # verbose IDs\n    if value.length isnt 17 or _.difference(value.split(\"\"), [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]).length\n      throw new Match.Error(\"Value \\\"\" + value + \"\\\" is not a valid ID\")\n    true\n  UserId: Match.Where (value) ->\n    check(value, Match.App.Id)\n    unless Meteor.users.findOne(value)\n      throw new Match.Error(\"User with ID \\\"\" + value + \"\\\" doesn't exist\")\n    true\n  QueryId: Match.Where (value) ->\n    check(value, Match.App.Id)\n    unless share.Queries.findOne(value)\n      throw new Match.Error(\"Query with ID \\\"\" + value + \"\\\" doesn't exist\")\n    true\n  IPSetId: Match.Where (value) ->\n    check(value, Match.App.Id)\n    unless share.IPSets.findOne(value)\n      throw new Match.Error(\"IP Set with ID \\\"\" + value + \"\\\" doesn't exist\")\n    true\n  TupleId: Match.Where (value) ->\n    check(value, Match.App.Id)\n    unless share.Tuples.findOne(value)\n      throw new Match.Error(\"Tuple file with ID \\\"\" + value + \"\\\" doesn't exist\")\n    true\n  isNewUpdate: (oldValue) ->\n    Match.Where (value) ->\n      check(value, Boolean)\n      if value and not oldValue\n        throw new Match.Error(\"isNew update can't be true from false\")\n      true\n  InArray: (possibleValues) ->\n    Match.Where (value) ->\n      if possibleValues.indexOf(value) == -1\n        throw new Match.Error(\"Expected one of \\\"\"+possibleValues.join(\"\\\", \\\"\")+\"\\\"; got \\\"\" + value + \"\\\"\")\n      true\n  UnsignedNumber: Match.Where (value) ->\n    check(value, Number)\n    if value < 0\n      throw new Match.Error(\"Must be unsigned number\")\n    true\n  Email: Match.Where (value) ->\n    value.match(share.emailRegex)\n_.extend(Match.App,\n  ExternalSource: Match.App.InArray([\"trello\"])\n)\n"]}