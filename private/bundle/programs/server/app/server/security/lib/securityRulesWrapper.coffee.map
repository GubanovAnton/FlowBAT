{"version":3,"sources":["meteor://ðŸ’»app/server/security/lib/securityRulesWrapper.coffee"],"names":["share","securityRulesWrapper","func","exception","user","Meteor","root","i18n","setLng","profile","locale","moment","lang","apply","arguments","error","_debug"],"mappings":";;;;;;;;;AAAAA,MAAMC,oBAAN,GAA6B,UAACC,IAAD;AAC3B,SAAO;AACL,QAAAC,SAAA,EAAAC,IAAA;AAAAA,WAAOC,OAAOD,IAAP,EAAP;;AACA,QAAGA,IAAH;AACEE,WAAKC,IAAL,CAAUC,MAAV,CAAiBJ,KAAKK,OAAL,CAAaC,MAA9B;AACAC,aAAOC,IAAP,CAAYR,KAAKK,OAAL,CAAaC,MAAzB;AAED;;AADD;AACE,aAAOR,KAAKW,KAAL,CAAW,IAAX,EAAcC,SAAd,CAAP;AADF,aAAAC,KAAA;AAEMZ,kBAAAY,KAAA;;AACJV,aAAOW,MAAP,CAAcb,SAAd;;AACAE,aAAOW,MAAP,CAAcF,SAAd;;AACA,YAAMX,SAAN;AAID;AAdI,GAAP;AAD2B,CAA7B,0E","file":"/server/security/lib/securityRulesWrapper.coffee","sourcesContent":["share.securityRulesWrapper = (func) ->\n  return ->\n    user = Meteor.user()\n    if user\n      root.i18n.setLng(user.profile.locale)\n      moment.lang(user.profile.locale)\n    try\n      return func.apply(@, arguments)\n    catch exception\n      Meteor._debug(exception)\n      Meteor._debug(arguments)\n      throw exception\n"]}