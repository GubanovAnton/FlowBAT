{"version":3,"sources":["configs.coffee"],"names":[],"mappings":";AAAA,KAAK,CAAC,OAAO,CAAC,KAAd,CACE;AAAA,UAAQ,KAAK,CAAC,oBAAN,CAA2B,SAAC,MAAD,EAAS,MAAT;WACjC,MADiC;EAAA,CAA3B,CAAR;AAAA,EAEA,QAAQ,KAAK,CAAC,oBAAN,CAA2B,SAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB,EAA6B,QAA7B,EAAuC,OAAvC;AACjC;AAAA,cAAY,CAAC,QAAQ,CAAC,OAAf,CAAuB,MAAvB,EAA+B,OAA/B,CAAP;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,sCAAZ,CAAV,CADF;KAAA;AAAA,IAEA,OACE;AAAA,aAAO,KAAK,CAAC,QAAN,CAAe,OAAf,CAAP;AAAA,MACA,MAAM,KAAK,CAAC,QAAN,CAAe,MAAf,CADN;AAAA,MAEA,MAAM,KAAK,CAAC,QAAN,CAAe,MAAf,CAFN;AAAA,MAGA,MAAM,KAAK,CAAC,QAAN,CAAe,MAAf,CAHN;AAAA,MAIA,cAAc,KAAK,CAAC,QAAN,CAAe,MAAf,CAJd;AAAA,MAKA,gBAAgB,KAAK,CAAC,QAAN,CAAe,MAAf,CALhB;AAAA,MAMA,aAAa,KAAK,CAAC,QAAN,CAAe,MAAf,CANb;AAAA,MAOA,aAAa,KAAK,CAAC,QAAN,CAAe,MAAf,CAPb;AAAA,MAQA,OAAO,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,GAAG,CAAC,WAAV,CAAsB,MAAM,CAAC,KAA7B,CAAf,CARP;AAAA,MASA,WAAW,IATX;KAHF;AAaA,QAAG,OAAU,CAAC,eAAd;AACE,OAAC,CAAC,MAAF,CAAS,IAAT,EACE;AAAA,yBAAiB,KAAK,CAAC,QAAN,CAAe,OAAf,CAAjB;OADF,EADF;KAbA;AAAA,IAiBA,MAAM,QAAN,EACE;AAAA,YAAM,IAAN;KADF,CAjBA;AAoBA,QAAG,QAAQ,CAAC,IAAT,IAAkB,CAAC,CAAC,GAAF,CAAM,QAAQ,CAAC,IAAf,EAAqB,gBAArB,CAAlB,IAA6D,SAAY,CAAC,IAAI,CAAC,cAAlF;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,yBAAZ,CAAV,CADF;KApBA;AAsBA,QAAG,QAAQ,CAAC,IAAT,IAAkB,CAAC,CAAC,GAAF,CAAM,QAAQ,CAAC,IAAf,EAAqB,aAArB,CAAlB,IAA0D,SAAY,CAAC,IAAI,CAAC,WAA/E;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,sBAAZ,CAAV,CADF;KAtBA;AAwBA,QAAG,QAAQ,CAAC,IAAT,IAAkB,CAAC,CAAC,GAAF,CAAM,QAAQ,CAAC,IAAf,EAAqB,aAArB,CAAlB,IAA0D,SAAY,CAAC,IAAI,CAAC,WAA/E;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,sBAAZ,CAAV,CADF;KAxBA;WA0BA,KA3BiC;EAAA,CAA3B,CAFR;AAAA,EA8BA,QAAQ,KAAK,CAAC,oBAAN,CAA2B,SAAC,MAAD,EAAS,MAAT;WACjC,MADiC;EAAA,CAA3B,CA9BR;CADF","file":"/server/security/configs.coffee.js","sourcesContent":["share.Configs.allow\n  insert: share.securityRulesWrapper (userId, config) ->\n    false # There can be only one!\n  update: share.securityRulesWrapper (userId, config, fieldNames, modifier, options) ->\n    unless share.Security.hasRole(userId, \"admin\")\n      throw new Match.Error(\"Operation not allowed for non admins\")\n    $set =\n      isSSH: Match.Optional(Boolean)\n      host: Match.Optional(String)\n      port: Match.Optional(String)\n      user: Match.Optional(String)\n      identityFile: Match.Optional(String)\n      siteConfigFile: Match.Optional(String)\n      dataRootdir: Match.Optional(String)\n      dataTempdir: Match.Optional(String)\n      isNew: Match.Optional(Match.App.isNewUpdate(config.isNew))\n      updatedAt: Date\n    if not config.isSetupComplete\n      _.extend($set,\n        isSetupComplete: Match.Optional(Boolean)\n      )\n    check(modifier,\n      $set: $set\n    )\n    if modifier.$set and _.has(modifier.$set, \"siteConfigFile\") and not modifier.$set.siteConfigFile\n      throw new Match.Error(\"siteConfigFile required\")\n    if modifier.$set and _.has(modifier.$set, \"dataRootdir\") and not modifier.$set.dataRootdir\n      throw new Match.Error(\"dataRootdir required\")\n    if modifier.$set and _.has(modifier.$set, \"dataTempdir\") and not modifier.$set.dataTempdir\n      throw new Match.Error(\"dataTempdir required\")\n    true\n  remove: share.securityRulesWrapper (userId, config) ->\n    false # Who wants to live forever?\n"]}