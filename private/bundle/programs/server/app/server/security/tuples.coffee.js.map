{"version":3,"sources":["tuples.coffee"],"names":[],"mappings":";AAAA,KAAK,CAAC,MAAM,CAAC,KAAb,CACE;AAAA,UAAQ,KAAK,CAAC,oBAAN,CAA2B,SAAC,MAAD,EAAS,KAAT;AACjC;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,8CAAZ,CAAV,CADF;KAAA;AAAA,IAEA,KAAK,CAAC,GAAN,GAAY,KAAK,CAAC,GAAN,IAAa,MAAM,CAAC,EAAP,EAFzB;AAAA,IAGA,KAAK,CAAC,OAAN,GAAgB,MAHhB;AAAA,IAIA,MAAM,KAAN,EACE;AAAA,WAAK,KAAK,CAAC,GAAG,CAAC,EAAf;AAAA,MACA,MAAM,MADN;AAAA,MAEA,MAAM,MAFN;AAAA,MAGA,UAAU,MAHV;AAAA,MAIA,eAAe,OAJf;AAAA,MAKA,OAAO,OALP;AAAA,MAMA,SAAS,KAAK,CAAC,GAAG,CAAC,MANnB;AAAA,MAOA,WAAW,IAPX;AAAA,MAQA,WAAW,IARX;KADF,CAJA;AAeA,QAAG,MAAS,CAAC,IAAb;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,eAAZ,CAAV,CADF;KAfA;AAiBA,QAAG,MAAS,CAAC,QAAb;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,mBAAZ,CAAV,CADF;KAjBA;WAmBA,KApBiC;EAAA,CAA3B,CAAR;AAAA,EAqBA,QAAQ,KAAK,CAAC,oBAAN,CAA2B,SAAC,MAAD,EAAS,KAAT,EAAgB,UAAhB,EAA4B,QAA5B,EAAsC,OAAtC;AACjC;AAAA;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,8CAAZ,CAAV,CADF;KAAA;AAEA,QAAO,WAAU,KAAK,CAAC,OAAvB;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,sCAAZ,CAAV,CADF;KAFA;AAAA,IAIA,OACE;AAAA,YAAM,KAAK,CAAC,QAAN,CAAe,MAAf,CAAN;AAAA,MACA,MAAM,KAAK,CAAC,QAAN,CAAe,MAAf,CADN;AAAA,MAEA,UAAU,KAAK,CAAC,QAAN,CAAe,MAAf,CAFV;AAAA,MAGA,eAAe,KAAK,CAAC,QAAN,CAAe,OAAf,CAHf;AAAA,MAIA,OAAO,KAAK,CAAC,QAAN,CAAe,KAAK,CAAC,GAAG,CAAC,WAAV,CAAsB,KAAK,CAAC,KAA5B,CAAf,CAJP;AAAA,MAKA,WAAW,IALX;KALF;AAAA,IAWA,MAAM,QAAN,EACE;AAAA,YAAM,IAAN;KADF,CAXA;AAcA,QAAG,QAAQ,CAAC,IAAT,IAAkB,CAAC,CAAC,GAAF,CAAM,QAAQ,CAAC,IAAf,EAAqB,MAArB,CAAlB,IAAmD,SAAY,CAAC,IAAI,CAAC,IAAxE;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,eAAZ,CAAV,CADF;KAdA;AAgBA,QAAG,QAAQ,CAAC,IAAT,IAAkB,CAAC,CAAC,GAAF,CAAM,QAAQ,CAAC,IAAf,EAAqB,UAArB,CAAlB,IAAuD,SAAY,CAAC,IAAI,CAAC,QAA5E;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,mBAAZ,CAAV,CADF;KAhBA;WAkBA,KAnBiC;EAAA,CAA3B,CArBR;AAAA,EAyCA,QAAQ,KAAK,CAAC,oBAAN,CAA2B,SAAC,MAAD,EAAS,KAAT;AACjC;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,8CAAZ,CAAV,CADF;KAAA;AAEA,QAAO,WAAU,KAAK,CAAC,OAAvB;AACE,YAAU,SAAK,CAAC,KAAN,CAAY,sCAAZ,CAAV,CADF;KAFA;WAIA,KALiC;EAAA,CAA3B,CAzCR;CADF","file":"/server/security/tuples.coffee.js","sourcesContent":["share.Tuples.allow\n  insert: share.securityRulesWrapper (userId, tuple) ->\n    unless userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    tuple._id = tuple._id or Random.id()\n    tuple.ownerId = userId\n    check(tuple,\n      _id: Match.App.Id\n      name: String\n      note: String\n      contents: String\n      isOutputStale: Boolean\n      isNew: Boolean\n      ownerId: Match.App.UserId\n      updatedAt: Date\n      createdAt: Date\n    )\n    if not tuple.name\n      throw new Match.Error(\"Name required\")\n    if not tuple.contents\n      throw new Match.Error(\"Contents required\")\n    true\n  update: share.securityRulesWrapper (userId, tuple, fieldNames, modifier, options) ->\n    unless userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    unless userId is tuple.ownerId\n      throw new Match.Error(\"Operation not allowed for non-owners\")\n    $set =\n      name: Match.Optional(String)\n      note: Match.Optional(String)\n      contents: Match.Optional(String)\n      isOutputStale: Match.Optional(Boolean)\n      isNew: Match.Optional(Match.App.isNewUpdate(tuple.isNew))\n      updatedAt: Date\n    check(modifier,\n      $set: $set\n    )\n    if modifier.$set and _.has(modifier.$set, \"name\") and not modifier.$set.name\n      throw new Match.Error(\"Name required\")\n    if modifier.$set and _.has(modifier.$set, \"contents\") and not modifier.$set.contents\n      throw new Match.Error(\"Contents required\")\n    true\n  remove: share.securityRulesWrapper (userId, tuple) ->\n    unless userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    unless userId is tuple.ownerId\n      throw new Match.Error(\"Operation not allowed for non-owners\")\n    true\n"]}