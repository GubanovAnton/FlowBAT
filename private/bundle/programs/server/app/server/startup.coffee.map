{"version":3,"sources":["meteor://ðŸ’»app/server/startup.coffee"],"names":["process","env","MAIL_URL","Meteor","settings","mailUrl","Email","sendImmediate","send","options","share","Emails","insert","public","isDebug","setTimeout","sendEmails","Accounts","emailTemplates","from","resetPassword","subject","user","Handlebars","templates","trim","text","url","html","startup","users","_ensureIndex","friendUserIds","background","loadFixtures","setInterval","cleanupQuickQueries","cleanupCachedQueryResults","periodicExecution","execute"],"mappings":";;;;;;;;;AAAAA,QAAQC,GAAR,CAAYC,QAAZ,GAAuBC,OAAOC,QAAP,CAAgBC,OAAvC,C,CAEA;;AACAC,MAAMC,aAAN,GAAsBD,MAAME,IAA5B;;AACAF,MAAME,IAAN,GAAa,UAACC,OAAD;AACXC,QAAMC,MAAN,CAAaC,MAAb,CAAoBH,OAApB;;AACA,MAAGN,OAAOC,QAAP,CAAgBS,MAAhB,CAAuBC,OAA1B;AAEE,WADAX,OAAOY,UAAP,CAAkB;AAEhB,aADAL,MAAMM,UAAN,EACA;AAFF,OAEE,IAFF,CACA;AAGD;AAPU,CAAb;;AAOAC,SAASC,cAAT,CAAwBC,IAAxB,GAA+B,yCAA/B;;AACAF,SAASC,cAAT,CAAwBE,aAAxB,CAAsCC,OAAtC,GAAgD,UAACC,IAAD;AAK9C,SAJAC,WAAWC,SAAX,CAAqB,sBAArB,EAA6C;AAAAF,UAAMA,IAAN;AAAYlB,cAAUD,OAAOC;AAA7B,GAA7C,EAAoFqB,IAApF,EAIA;AAL8C,CAAhD;;AAEAR,SAASC,cAAT,CAAwBE,aAAxB,CAAsCM,IAAtC,GAA6C,UAACJ,IAAD,EAAOK,GAAP,IAA7C;;AACAV,SAASC,cAAT,CAAwBE,aAAxB,CAAsCQ,IAAtC,GAA6C,UAACN,IAAD,EAAOK,GAAP;AAW3C,SAVAJ,WAAWC,SAAX,CAAqB,mBAArB,EAA0C;AAAAF,UAAMA,IAAN;AAAYK,SAAKA,GAAjB;AAAsBvB,cAAUD,OAAOC;AAAvC,GAA1C,EAA2FqB,IAA3F,EAUA;AAX2C,CAA7C;;AAGAtB,OAAO0B,OAAP,CAAe;AACb1B,SAAO2B,KAAP,CAAaC,YAAb,CAA0B;AAACC,mBAAe;AAAhB,GAA1B,EAA8C;AAACC,gBAAY;AAAb,GAA9C;;AACAvB,QAAMwB,YAAN;;AACA,MAAG/B,OAAOC,QAAP,CAAgBS,MAAhB,CAAuBC,OAA1B;AACEX,WAAOgC,WAAP,CAAmBzB,MAAMwB,YAAzB,EAAuC,GAAvC;AACA/B,WAAOgC,WAAP,CAAmBzB,MAAM0B,mBAAzB,EAA8C,GAA9C;AACAjC,WAAOgC,WAAP,CAAmBzB,MAAM2B,yBAAzB,EAAoD,GAApD;AAHF;AAKElC,WAAOgC,WAAP,CAAmBzB,MAAM0B,mBAAzB,EAA8C,KAAK,EAAL,GAAU,IAAxD;AACAjC,WAAOgC,WAAP,CAAmBzB,MAAM2B,yBAAzB,EAAoD,KAAK,EAAL,GAAU,IAA9D;AAoBD;;AACD,SApBA3B,MAAM4B,iBAAN,CAAwBC,OAAxB,EAoBA;AA9BF,G,CAlBA,wE","file":"/server/startup.coffee","sourcesContent":["process.env.MAIL_URL = Meteor.settings.mailUrl\n#share.twilio = if Meteor.settings.twilio.sid then Twilio(Meteor.settings.twilio.sid, Meteor.settings.twilio.token) else null\n\nEmail.sendImmediate = Email.send\nEmail.send = (options) ->\n  share.Emails.insert(options)\n  if Meteor.settings.public.isDebug\n    Meteor.setTimeout(->\n      share.sendEmails()\n    , 1000)\n\nAccounts.emailTemplates.from = \"Postman (FlowBAT) <postman@flowbat.com>\"\nAccounts.emailTemplates.resetPassword.subject = (user) ->\n  Handlebars.templates[\"resetPasswordSubject\"](user: user, settings: Meteor.settings).trim()\nAccounts.emailTemplates.resetPassword.text = (user, url) ->\nAccounts.emailTemplates.resetPassword.html = (user, url) ->\n  Handlebars.templates[\"resetPasswordHtml\"](user: user, url: url, settings: Meteor.settings).trim()\n\nMeteor.startup ->\n  Meteor.users._ensureIndex({friendUserIds: 1}, {background: true})\n  share.loadFixtures()\n  if Meteor.settings.public.isDebug\n    Meteor.setInterval(share.loadFixtures, 300)\n    Meteor.setInterval(share.cleanupQuickQueries, 500)\n    Meteor.setInterval(share.cleanupCachedQueryResults, 500)\n  else\n    Meteor.setInterval(share.cleanupQuickQueries, 60 * 60 * 1000)\n    Meteor.setInterval(share.cleanupCachedQueryResults, 60 * 60 * 1000)\n  share.periodicExecution.execute()\n#    Apm.connect(Meteor.settings.apm.appId, Meteor.settings.apm.secret)\n"]}