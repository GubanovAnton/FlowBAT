{"version":3,"sources":["methods.coffee"],"names":[],"mappings":";AAAA,KAAK,CAAC,aAAN,GAAsB;AACpB;AAAA,MAAG,OAAO,CAAC,GAAG,CAAC,QAAf;AACE,cAAU,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,KAArB,CAA2B,iCAA3B,CAAV;AACA,WAAO,OAAQ,GAAf,CAFF;GAAA;AAGA,SAAO,EAAP,CAJoB;AAAA,CAAtB;;AAAA,MAMM,CAAC,OAAP,CACE;AAAA,eAAa,SAAC,MAAD,EAAS,QAAT;AACX,UAAM,MAAN,EAAc,MAAd;AAAA,IACA,MAAM,QAAN,EAAgB,MAAhB,CADA;AAEA,UAAO,WAAU,IAAC,OAAX,IAAqB,KAAK,CAAC,QAAQ,CAAC,OAAf,CAAuB,IAAC,OAAxB,EAAgC,OAAhC,CAA5B;AACE,YAAM,CAAC,MAAP,CAAc,gDAAd;AACA,aAFF;KAFA;WAKA,QAAQ,CAAC,WAAT,CAAqB,MAArB,EAA6B,QAA7B,EANW;EAAA,CAAb;AAAA,EAOA,YAAY,SAAC,OAAD;AACV;AAAA,UAAM,OAAN,EACE;AAAA,aAAO,KAAK,CAAC,GAAG,CAAC,KAAjB;AAAA,MACA,MAAM,MADN;AAAA,MAEA,UAAU,MAFV;AAAA,MAGA,OAAO,KAAK,CAAC,GAAG,CAAC,OAAV,CAAkB,KAAK,CAAC,QAAQ,CAAC,MAAf,EAAlB,CAHP;KADF;AAAA,IAKA,OAAO,CAAC,KAAR,GAAgB,OAAO,CAAC,KAAK,CAAC,WAAd,EALhB;AAMA,QAAG,IAAC,OAAJ;AACE,UAAG,MAAS,CAAC,QAAQ,CAAC,OAAf,CAAuB,IAAC,OAAxB,EAAgC,OAAhC,CAAP;AACE,cAAM,CAAC,MAAP,CAAc,8CAAd;AACA,eAFF;OADF;KAAA;AAKE,eAAS,KAAK,CAAC,OAAO,CAAC,OAAd,EAAT;AACA,UAAG,MAAM,CAAC,eAAV;AACE,cAAM,CAAC,MAAP,CAAc,8CAAd;AACA,eAFF;OAAA;AAIE,eAAO,CAAC,KAAR,GAAgB,OAAhB,CAJF;OANF;KANA;AAAA,IAiBA,SAAS,QAAQ,CAAC,UAAT,CACP;AAAA,aAAO,OAAO,CAAC,KAAf;AAAA,MACA,UAAU,OAAO,CAAC,QADlB;AAAA,MAEA,SACE;AAAA,cAAM,OAAO,CAAC,IAAd;OAHF;KADO,CAjBT;AAAA,IAsBA,MAAM,CAAC,KAAK,CAAC,MAAb,CAAoB,MAApB,EAA4B;AAAA,MAAC,MAAM;AAAA,QAAC,OAAO,OAAO,CAAC,KAAhB;OAAP;KAA5B,CAtBA;AAAA,IAuBA,OAAO,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,MAArB,CAvBP;AAAA,IAwBA,KAAK,CAAC,IAAN,CACE;AAAA,YAAM,MAAM,IAAI,CAAC,IAAI,CAAC,CAAV,CAAY,kBAAZ,CAAN,GAAwC,sBAAxC,GAAiE,KAAK,CAAC,aAAN,EAAjE,GAAyF,GAA/F;AAAA,MACA,IAAI,OAAO,CAAC,KADZ;AAAA,MAEA,SAAS,UAAU,CAAC,SAAU,kBAArB,CAAuC;AAAA,cAAM,IAAN;AAAA,QAAY,UAAU,MAAM,CAAC,QAA7B;OAAvC,CAA6E,CAAC,IAA9E,EAFT;AAAA,MAGA,MAAM,UAAU,CAAC,SAAU,eAArB,CAAoC;AAAA,cAAM,IAAN;AAAA,QAAY,OAAO,OAAO,CAAC,KAA3B;AAAA,QAAkC,UAAU,OAAO,CAAC,QAApD;AAAA,QAA8D,UAAU,MAAM,CAAC,QAA/E;OAApC,CAA4H,CAAC,IAA7H,EAHN;KADF,CAxBA;WA6BA,OA9BU;EAAA,CAPZ;CADF,CANA","file":"/server/methods.coffee.js","sourcesContent":["share.getMailDomail = ->\n  if process.env.MAIL_URL\n    matches = process.env.MAIL_URL.match(/\\/\\/(.+)%40(.+):(.+)@(.+):(\\d+)/)\n    return matches[2]\n  return \"\"\n\nMeteor.methods\n  setPassword: (userId, password) ->\n    check(userId, String)\n    check(password, String)\n    unless userId is @userId or share.Security.hasRole(@userId, \"admin\")\n      Meteor._debug(\"Setting password is not allowed for non admins\")\n      return\n    Accounts.setPassword(userId, password)\n  addNewUser: (newUser) ->\n    check newUser,\n      email: Match.App.Email\n      name: String\n      password: String\n      group: Match.App.InArray(share.Security.groups())\n    newUser.email = newUser.email.toLowerCase()\n    if @userId\n      if not share.Security.hasRole(@userId, \"admin\")\n        Meteor._debug(\"Creating users is not allowed for non admins\")\n        return\n    else\n      config = share.Configs.findOne()\n      if config.isSetupComplete\n        Meteor._debug(\"Creating users is not allowed for non admins\")\n        return\n      else\n        newUser.group = \"admin\"\n    userId = Accounts.createUser\n      email: newUser.email\n      password: newUser.password\n      profile:\n        name: newUser.name\n    Meteor.users.update(userId, {$set: {group: newUser.group}})\n    user = Meteor.users.findOne(userId)\n    Email.send\n      from: '\"' + root.i18n.t(\"messages.postman\") + ' (FlowBAT)\" <herald@' + share.getMailDomail() + '>'\n      to: newUser.email\n      subject: Handlebars.templates[\"newUserSubject\"](user: user, settings: Meteor.settings).trim()\n      html: Handlebars.templates[\"newUserHtml\"](user: user, email: newUser.email, password: newUser.password, settings: Meteor.settings).trim()\n    userId\n"]}