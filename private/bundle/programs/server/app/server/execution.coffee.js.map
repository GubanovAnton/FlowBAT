{"version":3,"sources":["execution.coffee"],"names":[],"mappings":"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","file":"/server/execution.coffee.js","sourcesContent":["fs = Npm.require(\"fs\")\nProcess = Npm.require(\"child_process\")\nFuture = Npm.require('fibers/future')\nwriteFile = Future.wrap(fs.writeFile)\n\nshare.Queries.after.update (userId, query, fieldNames, modifier, options) ->\n  if _.intersection(fieldNames, share.inputFields).length\n    share.Queries.update(query._id, {$set: {isInputStale: true}})\n\nshare.Queries.after.update (userId, query, fieldNames, modifier, options) ->\n  if not query.isOutputStale\n    return\n  config = share.Configs.findOne({}, {transform: share.Transformations.config})\n  query = share.Transformations.query(query)\n  if not query.inputOptions(config)\n    share.Queries.update(query._id, {$set: {isInputStale: false, isOutputStale: false}})\n    return\n  profile = Meteor.users.findOne(query.ownerId).profile\n  callback = (result, error, code) ->\n    share.Queries.update(query._id, {$set: {result: result, error: error, code: code, isInputStale: false, isOutputStale: false}})\n  loadQueryResult(query, config, profile, callback)\n\nMeteor.methods\n  checkConnection: ->\n    unless @userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    queryId = share.Queries.insert({\n      interface: \"cmd\"\n      cmd: \"--protocol=0-255\"\n      isQuick: true\n    })\n    config = share.Configs.findOne({}, {transform: share.Transformations.config})\n    profile = Meteor.users.findOne(@userId).profile\n    query = share.Queries.findOne(queryId, {transform: share.Transformations.query})\n    @unblock()\n    fut = new Future()\n    callback = (result, error, code) ->\n      if error\n        fut.throw(new Meteor.Error(500, error))\n      else\n        fut.return(result)\n    executeQuery(query, config, profile, callback)\n    fut.wait()\n    # quick queries are cleaned up automatically\n  loadDataForCSV: (queryId) ->\n    check(queryId, Match.App.QueryId)\n    unless @userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    config = share.Configs.findOne({}, {transform: share.Transformations.config})\n    query = share.Queries.findOne(queryId, {transform: share.Transformations.query})\n    unless @userId is query.ownerId\n      throw new Match.Error(\"Operation not allowed for non-owners\")\n    @unblock()\n    fut = new Future()\n    callback = (result, error, code) ->\n      if error\n        fut.throw(new Error(error))\n      else\n        fut.return(result)\n    query.startRecNum = 1\n    loadQueryResult(query, config, {numRecs: 0}, callback)\n    fut.wait()\n  getRwfToken: (queryId) ->\n    check(queryId, Match.App.QueryId)\n    unless @userId\n      throw new Match.Error(\"Operation not allowed for unauthorized users\")\n    config = share.Configs.findOne({}, {transform: share.Transformations.config})\n    profile = Meteor.users.findOne(@userId).profile\n    query = share.Queries.findOne(queryId, {transform: share.Transformations.query})\n    unless @userId is query.ownerId\n      throw new Match.Error(\"Operation not allowed for non-owners\")\n    @unblock()\n    token = Random.id()\n    fut = new Future()\n    callback = (result, error, code) ->\n      if error\n        fut.throw(new Error(error))\n      else\n        if config.isSSH\n          copyCommand = \"scp \" + config.getSSHOptions() + \" -P \" + config.port + \" \" + config.user + \"@\" + config.host + \":\" + config.dataTempdir + \"/\" + query._id + \".rwf \" + \"/tmp\" + \"/\" + token + \".rwf\"\n        else\n          copyCommand = \"cp \" + config.dataTempdir + \"/\" + query._id + \".rwf \" + \"/tmp\" + \"/\" + token + \".rwf\"\n        Process.exec(copyCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n          result = stdout.trim()\n          error = stderr.trim()\n          code = if err then err.code else 0\n          if error\n            fut.throw(new Error(error))\n          else\n            fut.return(token)\n        ))\n    executeQuery(query, config, profile, callback)\n    fut.wait()\n\nexecuteQuery = (query, config, profile, callback) ->\n  rwsetbuildErrors = []\n  rwsetbuildFutures = []\n  isIpsetStale = false\n  _.each([\"dipSet\", \"sipSet\", \"anySet\"], (field) ->\n    if query[field + \"Enabled\"] and query[field]\n      set = share.IPSets.findOne(query[field])\n      if set.isOutputStale\n        isIpsetStale = true\n        rwsetbuildFuture = new Future()\n        txtFilename = \"/tmp\" + \"/\" + set._id + \".txt\"\n        rwsFilename = config.dataTempdir + \"/\" + set._id + \".rws\"\n        writeFileFuture = writeFile(txtFilename, set.contents)\n        if config.isSSH\n          scpCommand = \"scp \" + config.getSSHOptions() + \" -P \" + config.port + \" \" + txtFilename + \" \" + config.user + \"@\" + config.host + \":\" + txtFilename\n          scpFuture = new Future()\n          Process.exec(scpCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n            result = stdout.trim()\n            error = stderr.trim()\n            code = if err then err.code else 0\n            if error\n              rwsetbuildErrors.push(error)\n            if code is 0\n            else\n              if not error\n                throw \"scp: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n            scpFuture.return(result)\n          ))\n          scpFuture.wait()\n        rmCommand = \"rm -f \" + rwsFilename\n        if config.isSSH\n          rmCommand = config.wrapCommand(rmCommand)\n        rmFuture = new Future()\n        Process.exec(rmCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n          result = stdout.trim()\n          error = stderr.trim()\n          code = if err then err.code else 0\n          if error\n            rwsetbuildErrors.push(error)\n          if code is 0\n          else\n            if not error\n              throw \"rm: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n          rmFuture.return(result)\n        ))\n        rmFuture.wait()\n        writeFileFuture.resolve Meteor.bindEnvironment((err, result) ->\n          if err\n            rwsetbuildErrors.push(err)\n            rwsetbuildFuture.return(result)\n          else\n            rwsetbuildCommand = \"rwsetbuild \" + txtFilename + \" \" + rwsFilename\n            if config.isSSH\n              rwsetbuildCommand = config.wrapCommand(rwsetbuildCommand)\n            Process.exec(rwsetbuildCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n              result = stdout.trim()\n              error = stderr.trim()\n              code = if err then err.code else 0\n              if error\n                rwsetbuildErrors.push(error)\n              if code is 0\n                share.IPSets.update(set._id, {$set: {isOutputStale: false}})\n              else\n                if not error\n                  throw \"rwsetbuild: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n              rwsetbuildFuture.return(result)\n            ))\n        )\n        rwsetbuildFutures.push(rwsetbuildFuture)\n  )\n  Future.wait(rwsetbuildFutures)\n\n  if rwsetbuildErrors.length\n    callback(\"\", rwsetbuildErrors.join(\"\\n\"), 255)\n    return\n\n  if not query.isInputStale and not isIpsetStale\n    callback(\"\", \"\", 0)\n    return\n\n  tuplebuildErrors = []\n  tuplebuildFutures = []\n  isTupleStale = false\n  _.each([\"tupleFile\"], (field) ->\n    if query[field + \"Enabled\"] and query[field]\n      set = share.Tuples.findOne(query[field])\n      if set.isOutputStale\n        isTupleStale = true\n        tuplebuildFuture = new Future()\n        txtFilename = \"/tmp\" + \"/\" + set._id + \".txt\"\n        tupleFilename = config.dataTempdir + \"/\" + set._id + \".tuple\"\n        writeFileFuture = writeFile(txtFilename, set.contents)\n        if config.isSSH\n          scpCommand = \"scp \" + config.getSSHOptions() + \" -P \" + config.port + \" \" + txtFilename + \" \" + config.user + \"@\" + config.host + \":\" + txtFilename\n          scpFuture = new Future()\n          Process.exec(scpCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n            result = stdout.trim()\n            error = stderr.trim()\n            code = if err then err.code else 0\n            if error\n              tuplebuildErrors.push(error)\n            if code is 0\n            else\n              if not error\n                throw \"scp: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n            scpFuture.return(result)\n          ))\n          scpFuture.wait()\n        rmCommand = \"rm -f \" + tupleFilename\n        if config.isSSH\n          rmCommand = config.wrapCommand(rmCommand)\n        rmFuture = new Future()\n        Process.exec(rmCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n          result = stdout.trim()\n          error = stderr.trim()\n          code = if err then err.code else 0\n          if error\n            tuplebuildErrors.push(error)\n          if code is 0\n          else\n            if not error\n              throw \"rm: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n          rmFuture.return(result)\n        ))\n        rmFuture.wait()\n        writeFileFuture.resolve Meteor.bindEnvironment((err, result) ->\n          if err\n            tuplebuildErrors.push(err)\n            tuplebuildFuture.return(result)\n          else\n            tuplebuildCommand = \"cat \" + txtFilename + \" > \" + tupleFilename\n            if config.isSSH\n              tuplebuildCommand = config.wrapCommand(tuplebuildCommand)\n            Process.exec(tuplebuildCommand, Meteor.bindEnvironment((err, stdout, stderr) ->\n              result = stdout.trim()\n              error = stderr.trim()\n              code = if err then err.code else 0\n              if error\n                tuplebuildErrors.push(error)\n              if code is 0\n                share.Tuples.update(set._id, {$set: {isOutputStale: false}})\n              else\n                if not error\n                  throw \"tuplebuild: code is \\\"\" + code + \"\\\" while stderr is \\\"\" + error + \"\\\"\"\n              tuplebuildFuture.return(result)\n            ))\n        )\n        tuplebuildFutures.push(tuplebuildFuture)\n  )\n  Future.wait(tuplebuildFutures)\n\n  if tuplebuildErrors.length\n    callback(\"\", tuplebuildErrors.join(\"\\n\"), 255)\n    return\n\n  if not query.isInputStale and not isTupleStale\n    callback(\"\", \"\", 0)\n    return\n\n  command = query.inputCommand(config, profile)\n  Process.exec(command, Meteor.bindEnvironment((err, stdout, stderr) ->\n    result = stdout.trim()\n    error = stderr.trim()\n    code = if err then err.code else 0\n    if error.indexOf(\"Rejected\") isnt -1\n      error = null\n    callback(result, error, code)\n  ))\n\nloadQueryResult = (query, config, profile, callback) ->\n  executeQuery(query, config, profile, Meteor.bindEnvironment((result, error, code) ->\n    if error\n      return callback(result, error, code)\n    command = query.outputCommand(config, profile)\n    Process.exec(command, Meteor.bindEnvironment((err, stdout, stderr) ->\n      result = stdout.trim()\n      error = stderr.trim()\n      code = if err then err.code else 0\n      if error.indexOf(\"Error opening file\") isnt -1\n        query.isInputStale = true\n        loadQueryResult(query, config, profile, callback)\n      else\n        callback(result, error, code)\n    ))\n  ))\n"]}