{"version":3,"sources":["queries.defaults.coffee"],"names":[],"mappings":"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","file":"/common/queries.defaults.coffee.js","sourcesContent":["queryPreSave = (userId, changes) ->\n\nshare.Queries.before.insert (userId, query) ->\n  query._id = query._id || Random.id()\n  now = new Date()\n  startDate = moment.utc().format(\"YYYY/MM/DD:HH\")\n  _.defaults(query,\n    name: \"\"\n    cmd: \"\"\n    exclusionsCmd: \"\"\n    startDateType: \"interval\"\n    startDateOffsetEnabled: false\n    startDateOffset: \"60\"\n    startDateEnabled: true\n    startDate: startDate\n    endDateEnabled: false\n    endDate: \"\"\n    sensorEnabled: false\n    sensor: \"\"\n    typesEnabled: false\n    types: []\n    daddressEnabled: false\n    daddress: \"\"\n    saddressEnabled: false\n    saddress: \"\"\n    anyAddressEnabled: false\n    anyAddress: \"\"\n    dipSetEnabled: false\n    dipSet: null\n    sipSetEnabled: false\n    sipSet: null\n    anySetEnabled: false\n    anySet: null\n    tupleFileEnabled: false\n    tupleFile: null\n    tupleDirectionEnabled: false\n    tupleDirection: \"\"\n    tupleDelimiterEnabled: false\n    tupleDelimiter: \"\"\n    tupleFieldsEnabled: false\n    tupleFields: \"\"\n    dportEnabled: false\n    dport: \"\"\n    sportEnabled: false\n    sport: \"\"\n    aportEnabled: false\n    aport: \"\"\n    dccEnabled: false\n    dcc: []\n    sccEnabled: false\n    scc: []\n    protocolEnabled: true\n    protocol: \"0-255\"\n    flagsAllEnabled: false\n    flagsAll: \"\"\n    activeTimeEnabled: false\n    activeTime: \"\"\n    additionalParametersEnabled: false\n    additionalParameters: \"\"\n    additionalExclusionsCmdEnabled: false\n    additionalExclusionsCmd: \"\"\n    fields: [\"sIP\", \"dIP\", \"sPort\", \"dPort\", \"protocol\", \"packets\", \"bytes\", \"flags\", \"sTime\", \"duration\", \"eTime\", \"sensor\"]\n    fieldsOrder: _.clone(share.rwcutFields)\n    rwstatsDirection: \"top\"\n    rwstatsMode: \"count\"\n    rwstatsCountModeValue: \"10\"\n    rwstatsThresholdModeValue: \"\"\n    rwstatsPercentageModeValue: \"\"\n    rwstatsBinTimeEnabled: false\n    rwstatsBinTime: \"60\"\n    rwstatsFields: []\n    rwstatsFieldsOrder: _.clone(share.rwcutFields)\n    rwstatsValues: []\n    rwstatsValuesOrder: share.rwstatsValues.concat(share.rwcutFields)\n    rwstatsPrimaryValue: \"\"\n    rwstatsCmd: \"\"\n    rwcountBinSizeEnabled: false\n    rwcountBinSize: \"\"\n    rwcountLoadSchemeEnabled: false\n    rwcountLoadScheme: \"\"\n    rwcountSkipZeroes: true\n    rwcountFields: _.clone(share.rwcountFields)\n    rwcountCmd: \"\"\n    interface: \"cmd\"\n    output: \"rwcut\"\n    presentation: \"table\"\n    chartType: \"LineChart\"\n    chartHeight: 400\n    expandedFieldsets: [\"time\"]\n    executingInterval: 0\n    executingAt: null\n    isInputStale: false\n    isOutputStale: false\n    isUTC: true\n    isQuick: false\n    isNew: true\n    ownerId: userId\n    updatedAt: now\n    createdAt: now\n  , share.queryBlankValues, share.queryResetValues)\n  if not query.name\n    prefix = \"New query\"\n    count = share.Queries.find({ name: { $regex: \"^\" + prefix, $options: \"i\" } }).count()\n    query.name = prefix\n    if count\n      query.name += \" (\" + count + \")\"\n  queryPreSave.call(@, userId, query)\n\nshare.Queries.before.update (userId, query, fieldNames, modifier, options) ->\n  now = new Date()\n  modifier.$set = modifier.$set or {}\n  modifier.$set.updatedAt = modifier.$set.updatedAt or now\n  queryPreSave.call(@, userId, modifier.$set)\n\nshare.queryBlankValues =\n  result: \"\"\n  error: \"\"\n\nshare.queryResetValues =\n  startRecNum: 1\n  sortField: \"\"\n  sortReverse: true\n  chartHiddenFields: []\n"]}