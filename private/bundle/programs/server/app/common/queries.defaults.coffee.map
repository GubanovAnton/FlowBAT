{"version":3,"sources":["meteor://ðŸ’»app/common/queries.defaults.coffee"],"names":["queryPreSave","userId","changes","share","Queries","before","insert","query","count","now","prefix","startDate","_id","Random","id","Date","moment","utc","format","_","defaults","name","cmd","exclusionsCmd","startDateType","startDateOffsetEnabled","startDateOffset","startDateEnabled","endDateEnabled","endDate","sensorEnabled","sensor","typesEnabled","types","daddressEnabled","daddress","saddressEnabled","saddress","anyAddressEnabled","anyAddress","dipSetEnabled","dipSet","sipSetEnabled","sipSet","anySetEnabled","anySet","tupleFileEnabled","tupleFile","tupleDirectionEnabled","tupleDirection","tupleDelimiterEnabled","tupleDelimiter","tupleFieldsEnabled","tupleFields","dportEnabled","dport","sportEnabled","sport","aportEnabled","aport","dccEnabled","dcc","sccEnabled","scc","protocolEnabled","protocol","flagsAllEnabled","flagsAll","activeTimeEnabled","activeTime","additionalParametersEnabled","additionalParameters","additionalExclusionsCmdEnabled","additionalExclusionsCmd","fields","fieldsOrder","clone","rwcutFields","rwstatsDirection","rwstatsMode","rwstatsCountModeValue","rwstatsThresholdModeValue","rwstatsPercentageModeValue","rwstatsBinTimeEnabled","rwstatsBinTime","rwstatsFields","rwstatsFieldsOrder","rwstatsValues","rwstatsValuesOrder","concat","rwstatsPrimaryValue","rwstatsCmd","rwcountBinSizeEnabled","rwcountBinSize","rwcountLoadSchemeEnabled","rwcountLoadScheme","rwcountSkipZeroes","rwcountFields","rwcountCmd","output","presentation","chartType","chartHeight","expandedFieldsets","executingInterval","executingAt","isInputStale","isOutputStale","isUTC","isQuick","isNew","ownerId","updatedAt","createdAt","queryBlankValues","queryResetValues","find","$regex","$options","call","update","fieldNames","modifier","options","$set","result","error","startRecNum","sortField","sortReverse","chartHiddenFields"],"mappings":"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","file":"/common/queries.defaults.coffee","sourcesContent":["queryPreSave = (userId, changes) ->\n\nshare.Queries.before.insert (userId, query) ->\n  query._id = query._id || Random.id()\n  now = new Date()\n  startDate = moment.utc().format(\"YYYY/MM/DD:HH\")\n  _.defaults(query,\n    name: \"\"\n    cmd: \"\"\n    exclusionsCmd: \"\"\n    startDateType: \"interval\"\n    startDateOffsetEnabled: false\n    startDateOffset: \"60\"\n    startDateEnabled: true\n    startDate: startDate\n    endDateEnabled: false\n    endDate: \"\"\n    sensorEnabled: false\n    sensor: \"\"\n    typesEnabled: false\n    types: []\n    daddressEnabled: false\n    daddress: \"\"\n    saddressEnabled: false\n    saddress: \"\"\n    anyAddressEnabled: false\n    anyAddress: \"\"\n    dipSetEnabled: false\n    dipSet: null\n    sipSetEnabled: false\n    sipSet: null\n    anySetEnabled: false\n    anySet: null\n    tupleFileEnabled: false\n    tupleFile: null\n    tupleDirectionEnabled: false\n    tupleDirection: \"\"\n    tupleDelimiterEnabled: false\n    tupleDelimiter: \"\"\n    tupleFieldsEnabled: false\n    tupleFields: \"\"\n    dportEnabled: false\n    dport: \"\"\n    sportEnabled: false\n    sport: \"\"\n    aportEnabled: false\n    aport: \"\"\n    dccEnabled: false\n    dcc: []\n    sccEnabled: false\n    scc: []\n    protocolEnabled: true\n    protocol: \"0-255\"\n    flagsAllEnabled: false\n    flagsAll: \"\"\n    activeTimeEnabled: false\n    activeTime: \"\"\n    additionalParametersEnabled: false\n    additionalParameters: \"\"\n    additionalExclusionsCmdEnabled: false\n    additionalExclusionsCmd: \"\"\n    fields: [\"sIP\", \"dIP\", \"sPort\", \"dPort\", \"protocol\", \"packets\", \"bytes\", \"flags\", \"sTime\", \"duration\", \"eTime\", \"sensor\"]\n    fieldsOrder: _.clone(share.rwcutFields)\n    rwstatsDirection: \"top\"\n    rwstatsMode: \"count\"\n    rwstatsCountModeValue: \"10\"\n    rwstatsThresholdModeValue: \"\"\n    rwstatsPercentageModeValue: \"\"\n    rwstatsBinTimeEnabled: false\n    rwstatsBinTime: \"60\"\n    rwstatsFields: []\n    rwstatsFieldsOrder: _.clone(share.rwcutFields)\n    rwstatsValues: []\n    rwstatsValuesOrder: share.rwstatsValues.concat(share.rwcutFields)\n    rwstatsPrimaryValue: \"\"\n    rwstatsCmd: \"\"\n    rwcountBinSizeEnabled: false\n    rwcountBinSize: \"\"\n    rwcountLoadSchemeEnabled: false\n    rwcountLoadScheme: \"\"\n    rwcountSkipZeroes: true\n    rwcountFields: _.clone(share.rwcountFields)\n    rwcountCmd: \"\"\n    interface: \"cmd\"\n    output: \"rwcut\"\n    presentation: \"table\"\n    chartType: \"LineChart\"\n    chartHeight: 400\n    expandedFieldsets: [\"time\"]\n    executingInterval: 0\n    executingAt: null\n    isInputStale: false\n    isOutputStale: false\n    isUTC: true\n    isQuick: false\n    isNew: true\n    ownerId: userId\n    updatedAt: now\n    createdAt: now\n  , share.queryBlankValues, share.queryResetValues)\n  if not query.name\n    prefix = \"New query\"\n    count = share.Queries.find({ name: { $regex: \"^\" + prefix, $options: \"i\" } }).count()\n    query.name = prefix\n    if count\n      query.name += \" (\" + count + \")\"\n  queryPreSave.call(@, userId, query)\n\nshare.Queries.before.update (userId, query, fieldNames, modifier, options) ->\n  now = new Date()\n  modifier.$set = modifier.$set or {}\n  modifier.$set.updatedAt = modifier.$set.updatedAt or now\n  queryPreSave.call(@, userId, modifier.$set)\n\nshare.queryBlankValues =\n  result: \"\"\n  error: \"\"\n\nshare.queryResetValues =\n  startRecNum: 1\n  sortField: \"\"\n  sortReverse: true\n  chartHiddenFields: []\n"]}