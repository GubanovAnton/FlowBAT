{"version":3,"sources":["security.coffee"],"names":[],"mappings":";AAAA;;AAAA,KAAK,CAAC,QAAN,GACE;AAAA,kBACE;AAAA,WAAO,CAAC,OAAD,EAAU,SAAV,CAAP;AAAA,IACA,SAAS,CAAC,SAAD,CADT;GADF;AAAA,EAGA,QAAQ;WACN,MAAM,CAAC,IAAP,CAAY,IAAC,eAAb,EADM;EAAA,CAHR;AAAA,EAKA,oBAAoB,SAAC,IAAD;WAClB,KAAK,CAAC,QAAQ,CAAC,OAAf,CAAuB,MAAM,CAAC,MAAP,EAAvB,EAAwC,IAAxC,EADkB;EAAA,CALpB;AAAA,EAOA,kCAAkC,SAAC,MAAD,EAAS,IAAT;WAChC,WAAY,IAAI,CAAC,GAAjB,IAAyB,IAAC,QAAD,CAAS,MAAT,EAAiB,OAAjB,EADO;EAAA,CAPlC;AAAA,EASA,SAAS,SAAC,MAAD,EAAS,IAAT;AACP;AAAA,WAAO,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,MAArB,CAAP;AACA,QAAG,IAAH;AACE,UAAG,eAAQ,KAAK,CAAC,QAAQ,CAAC,cAAe,KAAI,CAAC,KAAL,CAAtC,YAAH;AACE,eAAO,IAAP,CADF;OADF;KADA;AAIA,WAAO,KAAP,CALO;EAAA,CATT;CADF","file":"/lib/security.coffee.js","sourcesContent":["share.Security =\n  effectiveRoles:\n    admin: [\"admin\", \"analyst\"]\n    analyst: [\"analyst\"]\n  groups: ->\n    Object.keys(@effectiveRoles)\n  currentUserHasRole: (role) ->\n    share.Security.hasRole(Meteor.userId(), role)\n  userIdCanChangeUserGroupOrRemove: (userId, user) ->\n    userId isnt user._id and @hasRole(userId, \"admin\")\n  hasRole: (userId, role) ->\n    user = Meteor.users.findOne(userId)\n    if user\n      if role in share.Security.effectiveRoles[user.group]\n        return true\n    return false\n"]}