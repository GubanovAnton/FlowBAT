{"version":3,"sources":["meteor://ðŸ’»app/lib/transformations.coffee"],"names":["indexOf","share","User","doc","ref","ref1","_","extend","email","emails","address","name","profile","firstName","split","slice","join","lastName","Config","wrapCommand","command","getSSHOptions","port","user","host","getIdentityFile","identityFile","process","env","PWD","Query","distinctRegex","filteredHeader","i","index","j","k","l","len","len1","len2","len3","len4","len5","m","n","o","parsedResult","parsedRow","parsedValue","rawHeader","row","spec","header","rows","result","parseResult","output","shift","unshift","rwcountFields","length","_id","trim","isDistinct","isPercentage","substr","match","replace","chartType","chartFieldTypes","push","presentation","call","parseFloat","moment","utc","toDate","value","queryId","displayName","isQuick","inputCommand","config","isPresentation","exclusion","pcapFile","pcapFileValidate","rwFileValidate","typeValidate","inputOptions","interface","search","RegExp","siteConfigFile","dataRootdir","inputExclusions","dataTempdir","isSSH","eTimeMoment","parameters","sTimeMoment","startDateOffsetNumber","string","typesEnabled","types","difference","queryTypes","startDateType","startDateEnabled","startDate","endDateEnabled","endDate","activeTimeEnabled","activeTime","startDateOffsetEnabled","startDateOffset","intval","clone","subtract","format","sensorEnabled","sensor","daddressEnabled","daddress","saddressEnabled","saddress","anyAddressEnabled","anyAddress","dipSetEnabled","dipSet","sipSetEnabled","sipSet","anySetEnabled","anySet","tupleFileEnabled","tupleFile","tupleDirectionEnabled","tupleDirection","tupleDelimiterEnabled","tupleDelimiter","tupleFieldsEnabled","tupleFields","dportEnabled","dport","sportEnabled","sport","aportEnabled","aport","dccEnabled","dcc","sccEnabled","scc","protocolEnabled","protocol","flagsAllEnabled","flagsAll","additionalParametersEnabled","additionalParameters","cmd","filterOptions","exclusionsCmd","additionalExclusionsCmdEnabled","additionalExclusionsCmd","compact","outputCommand","outputRwcutCommand","outputRwstatsCommand","outputRwcountCommand","commands","rwcutOptions","rwcutOptionsString","rwsortOptions","rwsortOptionsString","sortField","sortReverse","numRecs","startRecNum","fields","intersection","fieldsOrder","defaultRwstatsOptions","rwstatsOptions","rwstatsOptionsString","rwstatsValues","rwstatsValuesOrder","values","rwstatsFields","rwstatsFieldsOrder","rwstatsPrimaryValue","rwstatsDirection","rwstatsMode","rwstatsCountModeValue","rwstatsThresholdModeValue","rwstatsPercentageModeValue","rwstatsBinTimeEnabled","rwstatsBinTime","rwstatsCmd","defaultRwcountOptions","fieldIndex","headCommand","headOptions","rwcountOptions","rwcountOptionsString","sortCommand","sortOptions","tailCommand","tailOptions","rwcountBinSizeEnabled","rwcountBinSize","rwcountLoadSchemeEnabled","rwcountLoadScheme","rwcountSkipZeroes","rwcountCmd","rwstatsCountModeValueIsEnabled","rwstatsThresholdModeValueIsEnabled","rwstatsPercentageModeValueIsEnabled","availableChartTypes","path","IPSet","objectSelectName","objectSelectValue","Tuple","Transformations","query","ipset","tuple"],"mappings":"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","file":"/lib/transformations.coffee","sourcesContent":["# not used by default\nclass share.User\n  constructor: (doc) ->\n    _.extend(@, doc)\n    @email = @emails?[0]?.address\n    @name = @profile.name\n    @firstName = @name.split(' ').slice(0, 1).join(' ')\n    @lastName = @name.split(' ').slice(1).join(' ')\n\nclass share.Config\n  constructor: (doc) ->\n    _.extend(@, doc)\n  wrapCommand: (command) ->\n    \"ssh \" + @getSSHOptions() + \" -p \" + @port +  \" \" + @user + \"@\" + @host + \" \\\"\" + command + \"\\\"\"\n  getSSHOptions: ->\n    \"-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=error -i \" + @getIdentityFile()\n  getIdentityFile: ->\n    if @identityFile then @identityFile else process.env.PWD + \"/settings/identity\"\n\nclass share.Query\n  constructor: (doc) ->\n    _.extend(@, doc)\n    @header = []\n    @rows = []\n    if @result\n      parsedResult = share.parseResult(@result)\n      if @output is \"rwstats\"\n        parsedResult.shift()\n        parsedResult.shift()\n        # shift-shift outta here, you redundant rows\n      if @output is \"rwcount\"\n        parsedResult.unshift(share.rwcountFields)\n      rawHeader = parsedResult.shift()\n      for name in rawHeader\n        spec =\n          _id: name\n          name: name.trim()\n          isDistinct: false\n          isPercentage: false\n        if spec.name.indexOf(\"%\") is 0\n          spec.isPercentage = true\n          spec.name = spec.name.substr(1)\n        distinctRegex = /-D.*$/i\n        if spec.name.match(distinctRegex)\n          spec.isDistinct = true\n          spec.name = spec.name.replace(distinctRegex, \"\")\n        if spec.isDistinct\n          spec.chartType = \"number\"\n        else\n          spec.chartType = share.chartFieldTypes[spec.name] or \"string\"\n        @header.push(spec)\n      if @presentation is \"chart\"\n        for parsedRow in parsedResult\n          row = []\n          for parsedValue, index in parsedRow\n            spec = @header[index]\n            if @output is \"rwcount\" and spec.name not in @rwcountFields\n              continue\n            switch spec.chartType\n              when \"number\"\n                parsedValue = parseFloat(parsedValue)\n              when \"date\", \"datetime\"\n                m = moment.utc(parsedValue, \"YYYY/MM/DDTHH:mm:ss.SSS\")\n                parsedValue = m.toDate()\n            row.push(parsedValue)\n          @rows.push(row)\n      else\n        for parsedRow in parsedResult\n          row = []\n          for parsedValue, index in parsedRow\n            spec = @header[index]\n            row.push({_id: spec._id, value: parsedValue, queryId: @_id})\n          @rows.push(row)\n      filteredHeader = []\n      for spec in @header\n        filteredHeader.push(spec)\n      @header = filteredHeader\n  displayName: ->\n    if @isQuick then \"Quick query #\" + @_id else @name or \"#\" + @_id\n  inputCommand: (config, profile, isPresentation = false) ->\n    command = \"rwfilter\"\n    command += \" \" + @inputOptions(config)\n    # defaults to having --type=all as the standard instead of the SiLK default.\n    if @interface is \"cmd\"\n      typeValidate = command.search(RegExp('--type', 'i'))\n      if typeValidate < 0\n        command += \" --type=all \"\n    if config.siteConfigFile\n      command += \" --site-config-file=\" + config.siteConfigFile\n    # rwf and pcap integration\n    rwFileValidate = command.search(RegExp(' (\\\\/|\\\\w)+(\\\\/|\\\\w|\\\\-)*\\\\.(rwf|rw)', 'i'))\n    if rwFileValidate < 0\n      pcapFileValidate = command.search(RegExp(' (\\\\/|\\\\w)+(\\\\/|\\\\w|\\\\-)*\\\\.(pcap)', 'i'))\n      if pcapFileValidate >= 0\n        pcapFile = command.match(RegExp('(\\\\/|\\\\w)+(\\\\/|\\\\w|\\\\-)*\\\\.(pcap)', 'i'))\n        command += \" --input-pipe=stdin\"\n        command = command.replace(pcapFile[0],\"\")\n        command = \"rwp2yaf2silk --in=\" + pcapFile[0] + \" --out=- |\" + command\n      else\n        if config.dataRootdir\n          command += \" --data-rootdir=\" + config.dataRootdir\n\n    command += \" --pass=stdout\"\n    for exclusion in @inputExclusions()\n      command += \" | rwfilter --input-pipe=stdin\"\n      command += \" \" + exclusion\n      if config.siteConfigFile\n        command += \" --site-config-file=\" + config.siteConfigFile\n      # config.dataRootdir shouldn't be used with exclusions\n      command += \" --fail=stdout\"\n    command += \" > \" + (config.dataTempdir or \"/tmp\") + \"/\" + @_id + \".rwf\"\n    if config.isSSH and not isPresentation\n      command = config.wrapCommand(command)\n    command\n  inputOptions: (config) ->\n    if @interface is \"builder\"\n      parameters = []\n      if @typesEnabled and @types.length and _.difference(share.queryTypes, @types).length\n        value = @types.join(\",\")\n      else\n        value = \"all\"\n      parameters.push(\"--type=\" + value)\n      if @startDateType is \"interval\"\n        if @startDateEnabled and @startDate\n          parameters.push(\"--start-date=\" + @startDate)\n        if @endDateEnabled and @endDate\n          parameters.push(\"--end-date=\" + @endDate)\n        if @activeTimeEnabled and @activeTime\n          parameters.push(\"--active-time=\" + @activeTime)\n      else\n        if @startDateOffsetEnabled and @startDateOffset\n          startDateOffsetNumber = share.intval(@startDateOffset)\n          eTimeMoment = moment.utc()\n          sTimeMoment = eTimeMoment.clone().subtract(startDateOffsetNumber, 'minutes')\n          parameters.push(\"--start-date=\" + sTimeMoment.format(\"YYYY/MM/DD:HH\"))\n          parameters.push(\"--end-date=\" + eTimeMoment.format(\"YYYY/MM/DD:HH\"))\n          parameters.push(\"--active-time=\" + sTimeMoment.format(\"YYYY/MM/DDTHH:mm:ss.SSS\") + \"-\" + eTimeMoment.format(\"YYYY/MM/DDTHH:mm:ss.SSS\"))\n      if @sensorEnabled and @sensor\n        parameters.push(\"--sensor=\" + @sensor)\n      if @daddressEnabled and @daddress\n        parameters.push(\"--daddress=\" + @daddress)\n      if @saddressEnabled and @saddress\n        parameters.push(\"--saddress=\" + @saddress)\n      if @anyAddressEnabled and @anyAddress\n        parameters.push(\"--any-address=\" + @anyAddress)\n      if @dipSetEnabled and @dipSet\n        parameters.push(\"--dipset=\" + (config.dataTempdir or \"/tmp\") + \"/\" + @dipSet + \".rws\")\n      if @sipSetEnabled and @sipSet\n        parameters.push(\"--sipset=\" + (config.dataTempdir or \"/tmp\") + \"/\" + @sipSet + \".rws\")\n      if @anySetEnabled and @anySet\n        parameters.push(\"--anyset=\" + (config.dataTempdir or \"/tmp\") + \"/\" + @anySet + \".rws\")\n      if @tupleFileEnabled and @tupleFile\n        parameters.push(\"--tuple-file=\" + (config.dataTempdir or \"/tmp\") + \"/\" + @tupleFile + \".tuple\")\n      if @tupleDirectionEnabled and @tupleDirection\n        parameters.push(\"--tuple-direction=\" + @tupleDirection)\n      if @tupleDelimiterEnabled and @tupleDelimiter\n        parameters.push(\"--tuple-delimiter=\" + @tupleDelimiter)\n      if @tupleFieldsEnabled and @tupleFields\n        parameters.push(\"--tuple-fields=\" + @tupleFields)\n      if @dportEnabled and @dport\n        parameters.push(\"--dport=\" + @dport)\n      if @sportEnabled and @sport\n        parameters.push(\"--sport=\" + @sport)\n      if @aportEnabled and @aport\n        parameters.push(\"--aport=\" + @aport)\n      if @dccEnabled and @dcc.length\n        parameters.push(\"--dcc=\" + @dcc.join(\",\"))\n      if @sccEnabled and @scc.length\n        parameters.push(\"--scc=\" + @scc.join(\",\"))\n      if @protocolEnabled and @protocol\n        parameters.push(\"--protocol=\" + @protocol)\n      if @flagsAllEnabled and @flagsAll\n        parameters.push(\"--flags-all=\" + @flagsAll)\n      if @additionalParametersEnabled and @additionalParameters\n        parameters.push(@additionalParameters)\n      string = parameters.join(\" \")\n    else\n      string = @cmd\n    share.filterOptions(string)\n  inputExclusions: ->\n    exclusionsCmd = \"\"\n    if @interface is \"builder\"\n      if @additionalExclusionsCmdEnabled\n        exclusionsCmd = @additionalExclusionsCmd\n    else\n      exclusionsCmd = @exclusionsCmd\n    exclusionsCmd = share.filterOptions(exclusionsCmd)\n    _.compact(exclusionsCmd.split(/\\s+(?:OR|\\|\\|)\\s+/i))\n  outputCommand: (config, profile, isPresentation = false) ->\n    switch @output\n      when \"rwcut\"\n        @outputRwcutCommand(config, profile, isPresentation)\n      when \"rwstats\"\n        @outputRwstatsCommand(config, profile, isPresentation)\n      when \"rwcount\"\n        @outputRwcountCommand(config, profile, isPresentation)\n  outputRwcutCommand: (config, profile, isPresentation = false) ->\n    commands = []\n    if @sortField\n      rwsortOptions = [\"--fields=\" + @sortField]\n      if @sortReverse\n        rwsortOptions.push(\"--reverse\")\n      if config.siteConfigFile\n        rwsortOptions.push(\"--site-config-file=\" + config.siteConfigFile)\n      rwsortOptionsString = rwsortOptions.join(\" \")\n      rwsortOptionsString = share.filterOptions(rwsortOptionsString)\n      commands.push(\"rwsort \" + rwsortOptionsString)\n    rwcutOptions = [\"--num-recs=\" + profile.numRecs, \"--start-rec-num=\" + @startRecNum, \"--delimited\"]\n    if @fields.length\n      rwcutOptions.push(\"--fields=\" + _.intersection(@fieldsOrder, @fields).join(\",\"))\n    if config.siteConfigFile\n      rwcutOptions.push(\"--site-config-file=\" + config.siteConfigFile)\n    rwcutOptionsString = rwcutOptions.join(\" \")\n    rwcutOptionsString = share.filterOptions(rwcutOptionsString)\n    commands.push(\"rwcut \" + rwcutOptionsString)\n    commands[0] += \" \" + (config.dataTempdir or \"/tmp\") + \"/\" + @_id + \".rwf\"\n    command = commands.join(\" | \")\n    if config.isSSH and not isPresentation\n      command = config.wrapCommand(command)\n    command\n  outputRwstatsCommand: (config, profile, isPresentation = false) ->\n    defaultRwstatsOptions = [\"--delimited\"]\n    if @interface is \"builder\"\n      rwstatsOptions = defaultRwstatsOptions\n      if @rwstatsFields.length\n        rwstatsOptions.push(\"--fields=\" + _.intersection(@rwstatsFieldsOrder, @rwstatsFields).join(\",\"))\n      rwstatsValues = @rwstatsValues.slice(0)\n      rwstatsValuesOrder = @rwstatsValuesOrder.slice(0)\n      if @rwstatsPrimaryValue\n        rwstatsValues.unshift(@rwstatsPrimaryValue)\n        rwstatsValuesOrder.unshift(@rwstatsPrimaryValue)\n      if rwstatsValues.length\n        values = _.intersection(rwstatsValuesOrder, rwstatsValues)\n        for value, index in values\n          if value not in share.rwstatsValues\n            values[index] = \"distinct:\" + value\n        rwstatsOptions.push(\"--values=\" + values.join(\",\"))\n        if values[0] not in share.rwstatsValues\n          rwstatsOptions.push(\"--no-percents\")\n      rwstatsOptions.push(\"--\" + @rwstatsDirection)\n      switch @rwstatsMode\n        when \"count\"\n          rwstatsOptions.push(\"--count=\" + @rwstatsCountModeValue)\n        when \"threshold\"\n          rwstatsOptions.push(\"--threshold=\" + @rwstatsThresholdModeValue)\n        when \"percentage\"\n          rwstatsOptions.push(\"--percentage=\" + @rwstatsPercentageModeValue)\n      if @rwstatsBinTimeEnabled\n        if @rwstatsBinTime\n          rwstatsOptions.push(\"--bin-time=\" + @rwstatsBinTime)\n        else\n          rwstatsOptions.push(\"--bin-time\")\n      if config.siteConfigFile\n        rwstatsOptions.push(\"--site-config-file=\" + config.siteConfigFile)\n      rwstatsOptionsString = rwstatsOptions.join(\" \")\n    else\n      rwstatsOptionsString = @rwstatsCmd + \" \" + defaultRwstatsOptions.join(\" \")\n      rwstatsOptionsString = share.filterOptions(rwstatsOptionsString)\n    command = \"rwstats \" + rwstatsOptionsString\n    command += \" \" + (config.dataTempdir or \"/tmp\") + \"/\" + @_id + \".rwf\"\n    if config.isSSH and not isPresentation\n      command = config.wrapCommand(command)\n    command\n  outputRwcountCommand: (config, profile, isPresentation = false) ->\n    defaultRwcountOptions = [\"--delimited\", \"--no-titles\"] # --no-titles is necessary, because header is added later\n    if @interface is \"builder\"\n      rwcountOptions = defaultRwcountOptions\n      if @rwcountBinSizeEnabled\n        rwcountOptions.push(\"--bin-size=\" + @rwcountBinSize)\n      if @rwcountLoadSchemeEnabled\n        rwcountOptions.push(\"--load-scheme=\" + @rwcountLoadScheme)\n      if @rwcountSkipZeroes\n        rwcountOptions.push(\"--skip-zeroes\")\n      if config.siteConfigFile\n        rwcountOptions.push(\"--site-config-file=\" + config.siteConfigFile)\n      rwcountOptionsString = rwcountOptions.join(\" \")\n    else\n      rwcountOptionsString = @rwcountCmd + \" \" + defaultRwcountOptions.join(\" \")\n    rwcountOptionsString = share.filterOptions(rwcountOptionsString)\n    command = \"rwcount \" + rwcountOptionsString\n    command += \" \" + (config.dataTempdir or \"/tmp\") + \"/\" + @_id + \".rwf\"\n    if @presentation is \"table\"\n      if @sortField\n        fieldIndex = share.rwcountFields.indexOf(@sortField)\n        sortOptions = \"--field-separator=\\\\\\| --key=+\" + (fieldIndex + 1) + \"n\" + (if @sortReverse then \"r\" else \"\")\n        sortOptions = share.filterOptions(sortOptions, \"\\\\\\\\\\\\|\\\\+\")\n        sortCommand = \"sort \" + sortOptions\n        command += \" | \" + sortCommand\n      if profile.numRecs\n        headOptions = \"--lines=\" + (@startRecNum + profile.numRecs - 1)\n        headOptions = share.filterOptions(headOptions)\n        headCommand = \"head \" + headOptions\n        tailOptions = \"--lines=\" + profile.numRecs\n        tailOptions = share.filterOptions(tailOptions)\n        tailCommand = \"tail \" + tailOptions\n        command += \" | \" + headCommand + \" | \" + tailCommand\n    if config.isSSH and not isPresentation\n      command = config.wrapCommand(command)\n    command\n  rwstatsCountModeValueIsEnabled: ->\n    @rwstatsMode is \"count\"\n  rwstatsThresholdModeValueIsEnabled: ->\n    @rwstatsMode is \"threshold\"\n  rwstatsPercentageModeValueIsEnabled: ->\n    @rwstatsMode is \"percentage\"\n  availableChartTypes: ->\n    share.availableChartTypes[@output]\n  path: ->\n    \"/query/\" + @_id\n\nclass share.IPSet\n  constructor: (doc) ->\n    _.extend(@, doc)\n  displayName: ->\n    @name or \"#\" + @_id\n  objectSelectName: ->\n    @displayName()\n  objectSelectValue: ->\n    @_id\n  path: ->\n    \"/ipset/\" + @_id\n\nclass share.Tuple\n  constructor: (doc) ->\n    _.extend(@, doc)\n  displayName: ->\n    @name or \"#\" + @_id\n  objectSelectName: ->\n    @displayName()\n  objectSelectValue: ->\n    @_id\n  path: ->\n    \"/tuple/\" + @_id\n\nshare.Transformations =\n  user: (user) ->\n    if user instanceof share.User or not user then user else new share.User(user)\n  config: (config) ->\n    if config instanceof share.Config or not config then config else new share.Config(config)\n  query: (query) ->\n    if query instanceof share.Query or not query then query else new share.Query(query)\n  ipset: (ipset) ->\n    if ipset instanceof share.IPSet or not ipset then ipset else new share.IPSet(ipset)\n  tuple: (tuple) ->\n    if tuple instanceof share.Tuple or not tuple then tuple else new share.Tuple(tuple)\n"]}