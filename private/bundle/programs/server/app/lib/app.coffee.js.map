{"version":3,"sources":["app.coffee"],"names":[],"mappings":"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","file":"/lib/app.coffee.js","sourcesContent":["share = share or {}\n\n#share.combine = (funcs...) ->\n#  (args...) =>\n#    for func in funcs\n#      func.apply(@, args)\n\nshare.user = (fields, userId = Meteor.userId()) ->\n  Meteor.users.findOne(userId, {fields: fields})\n\nshare.intval = (value) ->\n  parseInt(value, 10) || 0\n\nshare.minute = 60 * 1000\nshare.hour = 60 * share.minute\n\nshare.datetimeFormat = \"YYYY/MM/DD HH:mm:ss.SSS\"\nshare.rwcutFields = [\n  \"sIP\"\n  \"dIP\"\n  \"sPort\"\n  \"dPort\"\n  \"protocol\"\n  \"packets\"\n  \"bytes\"\n  \"flags\"\n  \"sTime\"\n  \"duration\"\n  \"eTime\"\n  \"sensor\"\n  \"class\"\n  \"scc\"\n  \"dcc\"\n  \"initialFlags\"\n  \"sessionFlags\"\n  \"application\"\n  \"type\"\n  \"icmpTypeCode\"\n]\nshare.rwstatsValues = [\n  \"Records\"\n  \"Packets\"\n  \"Bytes\"\n]\nshare.rwcountFields = [\n  \"Date\"\n  \"Records\"\n  \"Bytes\"\n  \"Packets\"\n]\nshare.rwcountLoadSchemes = [\n  \"\"\n  \"bin-uniform\"\n  \"start-spike\"\n  \"end-spike\"\n  \"middle-spike\"\n  \"time-proportional\"\n  \"maximum-volume\"\n  \"minimum-volume\"\n]\nshare.tupleDirections = [\n  \"\"\n  \"both\"\n  \"forward\"\n  \"reverse\"\n]\nshare.availableChartTypes =\n  \"rwcut\": []\n  \"rwstats\": [\"BarChart\", \"ColumnChart\",  \"PieChart\"]\n  \"rwcount\": [\"LineChart\"]\nshare.chartFieldTypes =\n  \"sPort\": \"number\"\n  \"dPort\": \"number\"\n  \"protocol\": \"number\"\n  \"pro\": \"number\"\n  \"packets\": \"number\"\n  \"bytes\": \"number\"\n  \"sTime\": \"datetime\"\n  \"duration\": \"number\"\n  \"dur\": \"number\"\n  \"eTime\": \"datetime\"\n  \"Records\": \"number\"\n  \"Packets\": \"number\"\n  \"Bytes\": \"number\"\n  \"Date\": \"datetime\"\n  \"cumul_%\": \"number\"\nshare.startDateOffsets =\n  \"Hour\": (60).toString()\n  \"Day\": (24 * 60).toString()\n  \"Week\": (7 * 24 * 60).toString()\n  \"Month\": (30 * 24 * 60).toString()\n\nshare.parseResult = (result) ->\n  rows = []\n  for row in result.split(\"\\n\")\n    rows.push(row.split(\"|\"))\n  rows\n\nshare.queryTypes = [\"in\", \"out\", \"inweb\", \"outweb\", \"inicmp\", \"outicmp\", \"innull\", \"outnull\", \"int2int\", \"ext2ext\", \"other\"]\nshare.inputFields = [\n  \"interface\"\n  \"cmd\"\n  \"exclusionsCmd\"\n  \"startDateEnabled\"\n  \"startDate\"\n  \"endDateEnabled\"\n  \"endDate\"\n  \"sensorEnabled\"\n  \"sensor\"\n  \"typesEnabled\"\n  \"types\"\n  \"daddressEnabled\"\n  \"daddress\"\n  \"saddressEnabled\"\n  \"saddress\"\n  \"anyAddressEnabled\"\n  \"anyAddress\"\n  \"dipSetEnabled\"\n  \"dipSet\"\n  \"sipSetEnabled\"\n  \"sipSet\"\n  \"anySetEnabled\"\n  \"anySet\"\n  \"tupleFileEnabled\"\n  \"tupleFile\"\n  \"tupleDirectionEnabled\"\n  \"tupleDirection\"\n  \"tupleDelimiterEnabled\"\n  \"tupleDelimiter\"\n  \"tupleFieldsEnabled\"\n  \"tupleFields\"\n  \"dportEnabled\"\n  \"dport\"\n  \"sportEnabled\"\n  \"sport\"\n  \"aportEnabled\"\n  \"aport\"\n  \"dccEnabled\"\n  \"dcc\"\n  \"sccEnabled\"\n  \"scc\"\n  \"protocolEnabled\"\n  \"protocol\"\n  \"flagsAllEnabled\"\n  \"flagsAll\"\n  \"activeTimeEnabled\"\n  \"activeTime\"\n  \"additionalParametersEnabled\"\n  \"additionalParameters\"\n  \"additionalExclusionsCmdEnabled\"\n  \"additionalExclusionsCmd\"\n]\n\nshare.filterOptions = (options, additionalPermittedCharacters = \"\") ->\n  for excludedOption in [\"--python-expr\", \"--python-file\", \"--pmap\", \"--dynamic-library\", \"--all-destination\", \"--fail-destination\", \"--pass-destination\", \"--print-statistics\", \"--print-volume-statistics\", \"--xargs\"]\n    regexp = new RegExp(excludedOption + \"=?[^\\\\s]*\", \"gi\")\n    options = options.replace(regexp, \"\")\n  filter = new RegExp(\"[^\\\\s\\\\=\\\\-\\\\/\\\\,\\\\.\\\\:0-9a-z\" + additionalPermittedCharacters + \"]\", \"gi\")\n  options = options.replace(filter, \"\")\n  options\n\nshare.isDebug = Meteor.settings.public.isDebug\n\nobject = if typeof(window) != \"undefined\" then window else GLOBAL\nobject.isDebug = share.isDebug\nif typeof(console) != \"undefined\" && console.log && _.isFunction(console.log)\n  object.cl = _.bind(console.log, console)\nelse\n  object.cl = ->\n"]}