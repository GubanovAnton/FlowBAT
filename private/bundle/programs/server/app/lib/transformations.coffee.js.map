{"version":3,"sources":["transformations.coffee"],"names":[],"mappings":"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","file":"/lib/transformations.coffee.js","sourcesContent":["# not used by default\nclass share.User\n  constructor: (doc) ->\n    _.extend(@, doc)\n    @email = @emails?[0]?.address\n    @name = @profile.name\n    @firstName = @name.split(' ').slice(0, 1).join(' ')\n    @lastName = @name.split(' ').slice(1).join(' ')\n\nclass share.Config\n  constructor: (doc) ->\n    _.extend(@, doc)\n  wrapCommand: (command) ->\n    \"ssh \" + @getSSHOptions() + \" -p \" + @port +  \" \" + @user + \"@\" + @host + \" \\\"\" + command + \"\\\"\"\n  getSSHOptions: ->\n    \"-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o LogLevel=error -i \" + @getIdentityFile()\n  getIdentityFile: ->\n    if @identityFile then @identityFile else process.env.PWD + \"/settings/identity\"\n\nclass share.Query\n  constructor: (doc) ->\n    _.extend(@, doc)\n    @header = []\n    @rows = []\n    if @result\n      parsedResult = share.parseResult(@result)\n      if @output is \"rwstats\"\n        parsedResult.shift()\n        parsedResult.shift()\n        # shift-shift outta here, you redundant rows\n      if @output is \"rwcount\"\n        parsedResult.unshift(share.rwcountFields)\n      rawHeader = parsedResult.shift()\n      for name in rawHeader\n        spec =\n          _id: name\n          name: name.trim()\n          isDistinct: false\n          isPercentage: false\n        if spec.name.indexOf(\"%\") is 0\n          spec.isPercentage = true\n          spec.name = spec.name.substr(1)\n        distinctRegex = /-D.*$/i\n        if spec.name.match(distinctRegex)\n          spec.isDistinct = true\n          spec.name = spec.name.replace(distinctRegex, \"\")\n        if spec.isDistinct\n          spec.chartType = \"number\"\n        else\n          spec.chartType = share.chartFieldTypes[spec.name] or \"string\"\n        @header.push(spec)\n      if @presentation is \"chart\"\n        for parsedRow in parsedResult\n          row = []\n          for parsedValue, index in parsedRow\n            spec = @header[index]\n            if @output is \"rwcount\" and spec.name not in @rwcountFields\n              continue\n            switch spec.chartType\n              when \"number\"\n                parsedValue = parseFloat(parsedValue)\n              when \"date\", \"datetime\"\n                m = moment.utc(parsedValue, \"YYYY/MM/DDTHH:mm:ss.SSS\")\n                parsedValue = m.toDate()\n            row.push(parsedValue)\n          @rows.push(row)\n      else\n        for parsedRow in parsedResult\n          row = []\n          for parsedValue, index in parsedRow\n            spec = @header[index]\n            row.push({_id: spec._id, value: parsedValue, queryId: @_id})\n          @rows.push(row)\n      filteredHeader = []\n      for spec in @header\n        filteredHeader.push(spec)\n      @header = filteredHeader\n  displayName: ->\n    if @isQuick then \"Quick query #\" + @_id else @name or \"#\" + @_id\n  inputCommand: (config, profile, isPresentation = false) ->\n    command = \"rwfilter\"\n    command += \" \" + @inputOptions(config)\n    if config.siteConfigFile\n      command += \" --site-config-file=\" + config.siteConfigFile\n    if config.dataRootdir\n      command += \" --data-rootdir=\" + config.dataRootdir\n    command += \" --pass=stdout\"\n    for exclusion in @inputExclusions()\n      command += \" | rwfilter --input-pipe=stdin\"\n      command += \" \" + exclusion\n      if config.siteConfigFile\n        command += \" --site-config-file=\" + config.siteConfigFile\n      # config.dataRootdir shouldn't be used with exclusions\n      command += \" --fail=stdout\"\n    command += \" > \" + (config.dataTempdir or \"/tmp\") + \"/\" + @_id + \".rwf\"\n    if config.isSSH and not isPresentation\n      command = config.wrapCommand(command)\n    command\n  inputOptions: (config) ->\n    if @interface is \"builder\"\n      parameters = []\n      if @typesEnabled and @types.length and _.difference(share.queryTypes, @types).length\n        value = @types.join(\",\")\n      else\n        value = \"all\"\n      parameters.push(\"--type=\" + value)\n      if @startDateType is \"interval\"\n        if @startDateEnabled and @startDate\n          parameters.push(\"--start-date=\" + @startDate)\n        if @endDateEnabled and @endDate\n          parameters.push(\"--end-date=\" + @endDate)\n        if @activeTimeEnabled and @activeTime\n          parameters.push(\"--active-time=\" + @activeTime)\n      else\n        if @startDateOffsetEnabled and @startDateOffset\n          startDateOffsetNumber = share.intval(@startDateOffset)\n          eTimeMoment = moment.utc()\n          sTimeMoment = eTimeMoment.clone().subtract(startDateOffsetNumber, 'minutes')\n          parameters.push(\"--start-date=\" + sTimeMoment.format(\"YYYY/MM/DD:HH\"))\n          parameters.push(\"--end-date=\" + eTimeMoment.format(\"YYYY/MM/DD:HH\"))\n          parameters.push(\"--active-time=\" + sTimeMoment.format(\"YYYY/MM/DDTHH:mm:ss.SSS\") + \"-\" + eTimeMoment.format(\"YYYY/MM/DDTHH:mm:ss.SSS\"))\n      if @sensorEnabled and @sensor\n        parameters.push(\"--sensor=\" + @sensor)\n      if @daddressEnabled and @daddress\n        parameters.push(\"--daddress=\" + @daddress)\n      if @saddressEnabled and @saddress\n        parameters.push(\"--saddress=\" + @saddress)\n      if @anyAddressEnabled and @anyAddress\n        parameters.push(\"--any-address=\" + @anyAddress)\n      if @dipSetEnabled and @dipSet\n        parameters.push(\"--dipset=\" + (config.dataTempdir or \"/tmp\") + \"/\" + @dipSet + \".rws\")\n      if @sipSetEnabled and @sipSet\n        parameters.push(\"--sipset=\" + (config.dataTempdir or \"/tmp\") + \"/\" + @sipSet + \".rws\")\n      if @anySetEnabled and @anySet\n        parameters.push(\"--anyset=\" + (config.dataTempdir or \"/tmp\") + \"/\" + @anySet + \".rws\")\n      if @tupleFileEnabled and @tupleFile\n        parameters.push(\"--tuple-file=\" + (config.dataTempdir or \"/tmp\") + \"/\" + @tupleFile + \".tuple\")\n      if @tupleDirectionEnabled and @tupleDirection\n        parameters.push(\"--tuple-direction=\" + @tupleDirection)\n      if @tupleDelimiterEnabled and @tupleDelimiter\n        parameters.push(\"--tuple-delimiter=\" + @tupleDelimiter)\n      if @tupleFieldsEnabled and @tupleFields\n        parameters.push(\"--tuple-fields=\" + @tupleFields)\n      if @dportEnabled and @dport\n        parameters.push(\"--dport=\" + @dport)\n      if @sportEnabled and @sport\n        parameters.push(\"--sport=\" + @sport)\n      if @aportEnabled and @aport\n        parameters.push(\"--aport=\" + @aport)\n      if @dccEnabled and @dcc.length\n        parameters.push(\"--dcc=\" + @dcc.join(\",\"))\n      if @sccEnabled and @scc.length\n        parameters.push(\"--scc=\" + @scc.join(\",\"))\n      if @protocolEnabled and @protocol\n        parameters.push(\"--protocol=\" + @protocol)\n      if @flagsAllEnabled and @flagsAll\n        parameters.push(\"--flags-all=\" + @flagsAll)\n      if @additionalParametersEnabled and @additionalParameters\n        parameters.push(@additionalParameters)\n      string = parameters.join(\" \")\n    else\n      string = @cmd\n    share.filterOptions(string)\n  inputExclusions: ->\n    exclusionsCmd = \"\"\n    if @interface is \"builder\"\n      if @additionalExclusionsCmdEnabled\n        exclusionsCmd = @additionalExclusionsCmd\n    else\n      exclusionsCmd = @exclusionsCmd\n    exclusionsCmd = share.filterOptions(exclusionsCmd)\n    _.compact(exclusionsCmd.split(/\\s+(?:OR|\\|\\|)\\s+/i))\n  outputCommand: (config, profile, isPresentation = false) ->\n    switch @output\n      when \"rwcut\"\n        @outputRwcutCommand(config, profile, isPresentation)\n      when \"rwstats\"\n        @outputRwstatsCommand(config, profile, isPresentation)\n      when \"rwcount\"\n        @outputRwcountCommand(config, profile, isPresentation)\n  outputRwcutCommand: (config, profile, isPresentation = false) ->\n    commands = []\n    if @sortField\n      rwsortOptions = [\"--fields=\" + @sortField]\n      if @sortReverse\n        rwsortOptions.push(\"--reverse\")\n      if config.siteConfigFile\n        rwsortOptions.push(\"--site-config-file=\" + config.siteConfigFile)\n      rwsortOptionsString = rwsortOptions.join(\" \")\n      rwsortOptionsString = share.filterOptions(rwsortOptionsString)\n      commands.push(\"rwsort \" + rwsortOptionsString)\n    rwcutOptions = [\"--num-recs=\" + profile.numRecs, \"--start-rec-num=\" + @startRecNum, \"--delimited\"]\n    if @fields.length\n      rwcutOptions.push(\"--fields=\" + _.intersection(@fieldsOrder, @fields).join(\",\"))\n    if config.siteConfigFile\n      rwcutOptions.push(\"--site-config-file=\" + config.siteConfigFile)\n    rwcutOptionsString = rwcutOptions.join(\" \")\n    rwcutOptionsString = share.filterOptions(rwcutOptionsString)\n    commands.push(\"rwcut \" + rwcutOptionsString)\n    commands[0] += \" \" + (config.dataTempdir or \"/tmp\") + \"/\" + @_id + \".rwf\"\n    command = commands.join(\" | \")\n    if config.isSSH and not isPresentation\n      command = config.wrapCommand(command)\n    command\n  outputRwstatsCommand: (config, profile, isPresentation = false) ->\n    defaultRwstatsOptions = [\"--delimited\"]\n    if @interface is \"builder\"\n      rwstatsOptions = defaultRwstatsOptions\n      if @rwstatsFields.length\n        rwstatsOptions.push(\"--fields=\" + _.intersection(@rwstatsFieldsOrder, @rwstatsFields).join(\",\"))\n      rwstatsValues = @rwstatsValues.slice(0)\n      rwstatsValuesOrder = @rwstatsValuesOrder.slice(0)\n      if @rwstatsPrimaryValue\n        rwstatsValues.unshift(@rwstatsPrimaryValue)\n        rwstatsValuesOrder.unshift(@rwstatsPrimaryValue)\n      if rwstatsValues.length\n        values = _.intersection(rwstatsValuesOrder, rwstatsValues)\n        for value, index in values\n          if value not in share.rwstatsValues\n            values[index] = \"distinct:\" + value\n        rwstatsOptions.push(\"--values=\" + values.join(\",\"))\n        if values[0] not in share.rwstatsValues\n          rwstatsOptions.push(\"--no-percents\")\n      rwstatsOptions.push(\"--\" + @rwstatsDirection)\n      switch @rwstatsMode\n        when \"count\"\n          rwstatsOptions.push(\"--count=\" + @rwstatsCountModeValue)\n        when \"threshold\"\n          rwstatsOptions.push(\"--threshold=\" + @rwstatsThresholdModeValue)\n        when \"percentage\"\n          rwstatsOptions.push(\"--percentage=\" + @rwstatsPercentageModeValue)\n      if @rwstatsBinTimeEnabled\n        if @rwstatsBinTime\n          rwstatsOptions.push(\"--bin-time=\" + @rwstatsBinTime)\n        else\n          rwstatsOptions.push(\"--bin-time\")\n      if config.siteConfigFile\n        rwstatsOptions.push(\"--site-config-file=\" + config.siteConfigFile)\n      rwstatsOptionsString = rwstatsOptions.join(\" \")\n    else\n      rwstatsOptionsString = @rwstatsCmd + \" \" + defaultRwstatsOptions.join(\" \")\n      rwstatsOptionsString = share.filterOptions(rwstatsOptionsString)\n    command = \"rwstats \" + rwstatsOptionsString\n    command += \" \" + (config.dataTempdir or \"/tmp\") + \"/\" + @_id + \".rwf\"\n    if config.isSSH and not isPresentation\n      command = config.wrapCommand(command)\n    command\n  outputRwcountCommand: (config, profile, isPresentation = false) ->\n    defaultRwcountOptions = [\"--delimited\", \"--no-titles\"] # --no-titles is necessary, because header is added later\n    if @interface is \"builder\"\n      rwcountOptions = defaultRwcountOptions\n      if @rwcountBinSizeEnabled\n        rwcountOptions.push(\"--bin-size=\" + @rwcountBinSize)\n      if @rwcountLoadSchemeEnabled\n        rwcountOptions.push(\"--load-scheme=\" + @rwcountLoadScheme)\n      if @rwcountSkipZeroes\n        rwcountOptions.push(\"--skip-zeroes\")\n      if config.siteConfigFile\n        rwcountOptions.push(\"--site-config-file=\" + config.siteConfigFile)\n      rwcountOptionsString = rwcountOptions.join(\" \")\n    else\n      rwcountOptionsString = @rwcountCmd + \" \" + defaultRwcountOptions.join(\" \")\n    rwcountOptionsString = share.filterOptions(rwcountOptionsString)\n    command = \"rwcount \" + rwcountOptionsString\n    command += \" \" + (config.dataTempdir or \"/tmp\") + \"/\" + @_id + \".rwf\"\n    if @presentation is \"table\"\n      if @sortField\n        fieldIndex = share.rwcountFields.indexOf(@sortField)\n        sortOptions = \"--field-separator=\\\\\\| --key=+\" + (fieldIndex + 1) + \"n\" + (if @sortReverse then \"r\" else \"\")\n        sortOptions = share.filterOptions(sortOptions, \"\\\\\\\\\\\\|\\\\+\")\n        sortCommand = \"sort \" + sortOptions\n        command += \" | \" + sortCommand\n      if profile.numRecs\n        headOptions = \"--lines=\" + (@startRecNum + profile.numRecs - 1)\n        headOptions = share.filterOptions(headOptions)\n        headCommand = \"head \" + headOptions\n        tailOptions = \"--lines=\" + profile.numRecs\n        tailOptions = share.filterOptions(tailOptions)\n        tailCommand = \"tail \" + tailOptions\n        command += \" | \" + headCommand + \" | \" + tailCommand\n    if config.isSSH and not isPresentation\n      command = config.wrapCommand(command)\n    command\n  rwstatsCountModeValueIsEnabled: ->\n    @rwstatsMode is \"count\"\n  rwstatsThresholdModeValueIsEnabled: ->\n    @rwstatsMode is \"threshold\"\n  rwstatsPercentageModeValueIsEnabled: ->\n    @rwstatsMode is \"percentage\"\n  availableChartTypes: ->\n    share.availableChartTypes[@output]\n  path: ->\n    \"/query/\" + @_id\n\nclass share.IPSet\n  constructor: (doc) ->\n    _.extend(@, doc)\n  displayName: ->\n    @name or \"#\" + @_id\n  objectSelectName: ->\n    @displayName()\n  objectSelectValue: ->\n    @_id\n  path: ->\n    \"/ipset/\" + @_id\n\nclass share.Tuple\n  constructor: (doc) ->\n    _.extend(@, doc)\n  displayName: ->\n    @name or \"#\" + @_id\n  objectSelectName: ->\n    @displayName()\n  objectSelectValue: ->\n    @_id\n  path: ->\n    \"/tuple/\" + @_id\n\nshare.Transformations =\n  user: (user) ->\n    if user instanceof share.User or not user then user else new share.User(user)\n  config: (config) ->\n    if config instanceof share.Config or not config then config else new share.Config(config)\n  query: (query) ->\n    if query instanceof share.Query or not query then query else new share.Query(query)\n  ipset: (ipset) ->\n    if ipset instanceof share.IPSet or not ipset then ipset else new share.IPSet(ipset)\n  tuple: (tuple) ->\n    if tuple instanceof share.Tuple or not tuple then tuple else new share.Tuple(tuple)\n"]}